; generated by Norcroft  ARM C vsn 4.91 (ARM Ltd SDT2.51) [Build number 130]

        AREA |C$$code|, CODE, READONLY

|x$codeseg| DATA

main
|L000000.J2.main|
        STMDB    sp!,{v1,v2,lr}
        LDR      v2,[pc, #L000124-.-8]
        MOV      v1,a1
        MOV      lr,a2
        MOV      a2,#0x50
        MOV      a1,v2
        SWI      0x30008
        MOV      a2,v2
        ADD      a1,pc,#L000128-.-8
        SWI      0x3000b
        MOV      a2,lr
        MOV      a1,v1
        BL       parseargs
        BL       openstuff
        BL       dotitle
        LDR      v2,[pc, #L000130-.-8]
        MOV      a1,#0
        STR      a1,[v2,#0x130]
        MOV      a2,#3
        STR      a2,[v2,#0x124]
        LDR      a4,[v2,#0x138]
        STR      a1,[v2,#0x1a4]
        STR      a4,[v2,#0x134]
        ADD      a3,v2,#0x164
        LDMIA    a3,{a2,a3}
        ADD      a1,pc,#L000134-.-8
        SWI      0x1000e
|L00006c.J4.main|
        MOV      a1,#0
        BL       dispoptionscreen
        MOV      v1,a1
        CMP      a1,#0xb
        CMPNE    v1,#1
        BEQ      |L0000c4.J10.main|
        BL       resetjoydata
        BL       gamemain
        MOV      v1,a1
        CMP      a1,#8
        BEQ      |L0000dc.J15.main|
        BGT      |L0000b4.J18.main|
        CMP      a1,#1
        BEQ      |L0000c4.J10.main|
        CMP      a1,#7
        ADDEQ    a1,pc,#L000164-.-8
        BEQ      |L0000f0.J34.main|
        B        |L0000f8.J12.main|
|L0000b4.J18.main|
        CMP      a1,#0xa
        BEQ      |L000104.J11.main|
        CMP      a1,#0xb
        BNE      |L0000f8.J12.main|
|L0000c4.J10.main|
        BL       closestuff
        ADD      a1,pc,#L000180-.-8
        SWI      0x1000e
        MOV      a1,v1
        BL       exit
        B        |L000104.J11.main|
|L0000dc.J15.main|
        ADD      ip,v2,#0x100
        LDRSB    a1,[ip,#0x78]
        CMP      a1,#0
        BNE      |L000104.J11.main|
        ADD      a1,pc,#L000190-.-8
|L0000f0.J34.main|
        BL       playcpak
        B        |L000104.J11.main|
|L0000f8.J12.main|
        MOV      a2,v1
        ADD      a1,pc,#L0001a8-.-8
        SWI      0x1000e
|L000104.J11.main|
        ADD      ip,v2,#0x100
        LDRSB    a1,[ip,#0x78]
        CMP      a1,#0
        BNE      |L00006c.J4.main|
        LDR      a1,[v2,#0x130]
        BL       DoHighScoreScr
        BL       showcredits
        B        |L00006c.J4.main|
L000124
        DCD      wallimagefile
L000128
        DCB      "prog"
        DCB      "dir\0"
L000130
        DCD      |x$dataseg|
L000134
        DCB      "scal"
        DCB      "e: 0"
        DCB      "x%lx"
        DCB      "\nthr"
        DCB      "ottl"
        DCB      "eshi"
        DCB      "ft: "
        DCB      "%ld\n"
        DCB      "xlif"
        DCB      "einc"
        DCB      "r: %"
        DCB      "ld\n\0"
L000164
        DCB      "$pro"
        DCB      "gdir"
        DCB      "/Str"
        DCB      "eams"
        DCB      "/Fin"
        DCB      "alDe"
        DCB      "ath\0"
L000180
        DCB      "Norm"
        DCB      "al e"
        DCB      "xit."
        DCB      "\n\0\0\0"
L000190
        DCB      "$pro"
        DCB      "gdir"
        DCB      "/Str"
        DCB      "eams"
        DCB      "/Out"
        DCB      "ro\0\0"
L0001a8
        DCB      "What"
        DCB      " doe"
        DCB      "s ma"
        DCB      "in()"
        DCB      " do "
        DCB      "with"
        DCB      " %d?"
        DCB      "\n\0\0\0"

gamemain
        STMDB    sp!,{v1,v2,lr}
        BL       opengamestuff
        LDR      v2,[pc, #L000130-.-8]
        LDR      a1,[v2,#0x1a4]
        LDR      a2,[v2,#0x1a0]
        CMP      a1,a2
        BGE      |L0002c8.J5.gamemain|
|L0001e4.J4.gamemain|
        BL       loadshard
        LDR      a1,[v2,#0x1a4]
        LDR      a2,[v2,#0x19c]
        LDR      a1,[a2,a1,LSL #2]
        SWI      0x30007
        BL       levelmain
        MOV      v1,a1
        CMP      a1,#0xb
        ADDLS    pc,pc,a1,LSL #2
        B        |L0002ac.J7.gamemain|
        B        |L0002ac.J7.gamemain|
        B        |L0002a4.J17.gamemain|
        B        |L0002b8.J19.gamemain|
        B        |L0002ac.J7.gamemain|
        B        |L0002b8.J19.gamemain|
        B        |L0002ac.J7.gamemain|
        B        |L0002ac.J7.gamemain|
        B        |L00023c.J11.gamemain|
        B        |L000254.J9.gamemain|
        B        |L0002ac.J7.gamemain|
        B        |L000254.J9.gamemain|
        B        |L0002a4.J17.gamemain|
|L00023c.J11.gamemain|
        LDR      a1,[v2,#0x124]
        SUB      a1,a1,#1
        STR      a1,[v2,#0x124]
        CMP      a1,#0
        BGT      |L0002b8.J19.gamemain|
        B        |L0002a4.J17.gamemain|
|L000254.J9.gamemain|
        LDR      a1,[v2,#0x1a0]
        SUB      a2,a1,#1
        LDR      a1,[v2,#0x1a4]
        CMP      a2,a1
        BEQ      |L000294.J20.gamemain|
        ADD      ip,v2,#0x100
        LDRSB    a1,[ip,#0x78]
        CMP      a1,#0
        BNE      |L0002a4.J17.gamemain|
        BL       dointerlev
        MOV      v1,a1
        CMP      a1,#4
        CMPNE    v1,#2
        BEQ      |L0002b8.J19.gamemain|
        CMP      v1,#1
        BEQ      |L0002a4.J17.gamemain|
|L000294.J20.gamemain|
        ADD      ip,v2,#0x100
        LDRSB    a1,[ip,#0x78]
        CMP      a1,#0
        BEQ      |L0002ac.J7.gamemain|
|L0002a4.J17.gamemain|
        LDR      a1,[v2,#0x1a0]
        STR      a1,[v2,#0x1a4]
|L0002ac.J7.gamemain|
        LDR      a1,[v2,#0x1a4]
        ADD      a1,a1,#1
        STR      a1,[v2,#0x1a4]
|L0002b8.J19.gamemain|
        ADD      a2,v2,#0x1a0
        LDMIA    a2,{a1,a2}
        CMP      a2,a1
        BLT      |L0001e4.J4.gamemain|
|L0002c8.J5.gamemain|
        MOV      a1,#0
        STR      a1,[v2,#0x1a4]
        BL       closegamestuff
        ADD      a1,pc,#L0002e4-.-8
        SWI      0x30007
        MOV      a1,v1
        LDMIA    sp!,{v1,v2,pc}
L0002e4
        DCB      "$pro"
        DCB      "gdir"
        DCB      "\0\0\0\0"

levelmain
        STMDB    sp!,{v1-v8,lr}
        SUB      sp,sp,#0x30
        LDR      v2,[pc, #L000130-.-8]
        MOV      a1,#0x64
        STR      a1,[v2,#0x128]
        STR      a1,[v2,#0x120]
        LDR      v8,[pc, #L0006f4-.-8]
        LDR      v7,[v2,#0x130]
        MOV      a1,#0x100000
        STR      a1,[v8,#8]
        STR      a1,[v8,#0]
        SUB      a1,a1,#0x108000
        STR      a1,[v8,#4]
        MOV      a1,#0
        STR      a1,[v2,#0x11c]
        STR      a1,[v2,#0x160]
        STR      a1,[v2,#0x12c]
        STRB     a1,[v2,#0x184]
        STRB     a1,[v2,#0x188]
        MOV      v1,#0
        BL       openlevelstuff
        BL       fullstop
        MOV      v3,#0
        MOV      a1,#0x10000
        STR      a1,[v2,#0x160]
        MOV      v4,v3
        MOV      v5,v3
        BL       resetjoydata
|L000360.J4.levelmain|
        ADD      ip,v2,#0x100
        LDRSB    a1,[ip,#0x84]
        CMP      a1,#0
        LDR      a1,[v2,#0x120]
        BNE      |L000380.J7.levelmain|
        CMP      a1,#0
        BGT      |L0003d4.J6.levelmain|
        B        |L000388.J11.levelmain|
|L000380.J7.levelmain|
        CMP      a1,#0
        BGT      |L0003c0.J10.levelmain|
|L000388.J11.levelmain|
        MOV      v1,v2
        LDR      a1,[v2,#0x1ac]
        BL       installclut
        LDR      a1,[v1,#0x1b0]
        BL       installclut
        LDR      a1,[v1,#0x124]
        CMP      a1,#1
        BLE      |L0003bc.J12.levelmain|
        MOV      a1,#0x64
        STR      a1,[v1,#0x128]
        STR      v7,[v1,#0x130]
        STR      a1,[v1,#0x120]
        BL       simpledeath
|L0003bc.J12.levelmain|
        MOV      v1,#7
|L0003c0.J10.levelmain|
        ADD      ip,v2,#0x100
        LDRSB    a1,[ip,#0x84]
        CMP      a1,#0
        MOVNE    v1,#8
        B        |L0006e4.J16.levelmain|
|L0003d4.J6.levelmain|
        LDR      a2,[pc, #L0006f8-.-8]
        LDR      a1,[pc, #L0006f4-.-8]
        BL       moveplayer
        CMP      v6,#0
        BNE      |L000438.J17.levelmain|
        LDR      v8,[pc, #L0006fc-.-8]
        LDRB     a1,[v8,#0x10]
        CMP      a1,#0
        BEQ      |L000438.J17.levelmain|
        ADD      ip,v2,#0x100
        LDRSB    a1,[ip,#0x74]
        CMP      a1,#0
        MOVNE    v1,#0xa
        BNE      |L0006e4.J16.levelmain|
        MOV      a1,#0
        BL       stopspoolsound
        ADD      a2,pc,#L000700-.-8
        MOV      a1,#0
        BL       rendermessage
        MOV      a2,#0xf
        ADD      a2,a2,#0x2700
        LDR      a1,[pc, #L000708-.-8]
        BL       spoolsound
        MOV      a1,#1
        STRB     a1,[v8,#0x10]
|L000438.J17.levelmain|
        LDR      v8,[pc, #L0006fc-.-8]
        LDRB     v6,[v8,#0x10]
        LDRB     a1,[v8,#0xf]
        CMP      a1,#0
        BEQ      |L000464.J23.levelmain|
        BL       attemptoptions
        MOV      v1,a1
        CMP      a1,#4
        CMPNE    v1,#2
        CMPNE    v1,#1
        BEQ      |L0006e4.J16.levelmain|
|L000464.J23.levelmain|
        CMP      v5,#0
        BNE      |L000478.J30.levelmain|
        LDRB     a1,[v8,#0xc]
        CMP      a1,#0
        BLNE     shoot
|L000478.J30.levelmain|
        LDRB     v5,[v8,#0xc]
        CMP      v4,#0
        BNE      |L000490.J33.levelmain|
        LDRB     a1,[v8,#0xd]
        CMP      a1,#0
        BLNE     probe
|L000490.J33.levelmain|
        LDRB     v4,[v8,#0xd]
        CMP      v3,#0
        BNE      |L0004c8.J36.levelmain|
        LDRB     a1,[v8,#0xe]
        CMP      a1,#0
        BEQ      |L0004c8.J36.levelmain|
        BL       dostatmap
        MOV      v1,a1
        CMP      a1,#4
        CMPNE    v1,#2
        CMPNE    v1,#1
        BEQ      |L0006e4.J16.levelmain|
        MOV      a1,#1
        STRB     a1,[v8,#0xe]
|L0004c8.J36.levelmain|
        LDRB     v3,[v8,#0xe]
        LDRB     v8,[v8,#0x11]
        BL       resetjoydata
        MOV      a1,v8
        BL       moveobjects
        MOV      a1,v8
        BL       cyclewalls
        ADD      a2,v2,#0x130
        LDMIA    a2,{a1,a2}
        CMP      a1,a2
        BLT      |L000518.J44.levelmain|
        LDR      a1,[v2,#0x124]
        ADD      a1,a1,#1
        STR      a1,[v2,#0x124]
        MOV      a1,#0xc
        BL       playsound
        LDR      a1,[v2,#0x138]
        LDR      a2,[v2,#0x134]
        ADD      a1,a2,a1
        STR      a1,[v2,#0x134]
|L000518.J44.levelmain|
        LDR      a1,[v2,#0x160]
        CMP      a1,#0
        BEQ      |L00055c.J46.levelmain|
        SUB      a1,a1,v8,LSL #10
        CMP      a1,#0
        MOVLT    lr,#0
        STR      a1,[v2,#0x160]
        STRLT    lr,[v2,#0x160]
        BLT      |L000540.J51.levelmain|
        BNE      |L00054c.J50.levelmain|
|L000540.J51.levelmain|
        MOV      a2,#0x10000
        LDR      a1,[v2,#0x1ac]
        BL       fadetolevel
|L00054c.J50.levelmain|
        LDR      a1,[v2,#0x160]
        RSB      a2,a1,#0x10000
        LDR      a1,[v2,#0x1b0]
        BL       fadetolevel
|L00055c.J46.levelmain|
        ADD      a2,v2,#0x1ac
        LDMIA    a2,{a1,a2}
        STR      a1,[v2,#0x1b0]
        STR      a2,[v2,#0x1ac]
        LDR      a1,[a2,#0]
        MOV      a2,#0
        BL       DisplayScreen
        ADD      a1,sp,#0xc
        BL       newmat
        LDR      a3,[v2,#0x11c]
        LDR      a2,[pc, #L00070c-.-8]
        ADD      a1,sp,#0xc
        BL       applyyaw
        LDR      v8,[pc, #L000714-.-8]
        LDR      a3,[pc, #L00070c-.-8]
        LDR      a2,[pc, #L000710-.-8]
        MOV      a4,#4
        MOV      a1,v8
        SWI      0x50002
        LDR      a1,[v2,#0x11c]
        RSB      a3,a1,#0
        ADD      a1,sp,#0xc
        LDR      a2,[pc, #L00070c-.-8]
        BL       applyyaw
        LDR      a4,[pc, #L0006f4-.-8]
        LDR      a1,[v8,#0x24]
        LDR      a2,[a4,#0]
        LDR      a3,[pc, #L000718-.-8]
        ADD      a1,a2,a1,ASR #1
        STR      a1,[a3,#0]
        LDR      a3,[a4,#4]
        LDR      a2,[v8,#0x28]
        RSB      a1,a1,#0
        ADD      a2,a3,a2,ASR #1
        LDR      a3,[pc, #L000718-.-8]
        STR      a2,[a3,#4]
        LDR      a3,[a4,#8]
        LDR      a4,[v8,#0x2c]
        LDR      v8,[pc, #L00071c-.-8]
        ADD      a3,a3,a4,ASR #1
        LDR      a4,[pc, #L000718-.-8]
        STR      a3,[a4,#8]
        STR      a1,[sp,#0]
        RSB      a1,a2,#0
        STR      a1,[sp,#4]
        RSB      a1,a3,#0
        STR      a1,[sp,#8]
        LDR      a1,[pc, #L000720-.-8]
        MOV      a3,#0x12
        MOV      a2,v8
        BL       copyverts
        MOV      a2,v8
        MOV      a1,sp
        MOV      a3,#0x12
        BL       translatemany
        LDR      a3,[pc, #L00070c-.-8]
        MOV      a1,v8
        MOV      a4,#0x12
        MOV      a2,v8
        SWI      0x50002
        LDR      a1,[v8,#0x18]
        LDR      a2,[v8,#0]
        MOV      lr,#0
        LDR      ip,[pc, #L000724-.-8]
        SUB      a1,a1,a2
        STR      a1,[ip,#0]
        LDR      a4,[pc, #L000728-.-8]
        RSB      a1,a1,#0
        STR      a1,[a4,#0]
        STR      lr,[ip,#4]
        STR      lr,[a4,#4]
        LDR      a1,[v8,#8]
        LDR      a3,[v8,#0x20]
        SUB      a3,a3,a1
        STR      a3,[ip,#8]
        RSB      a3,a3,#0
        STR      a3,[a4,#8]
        LDR      a3,[v8,#0x48]
        LDR      a4,[pc, #L00072c-.-8]
        SUB      a2,a3,a2
        STR      a2,[a4,#0]
        LDR      a3,[pc, #L000730-.-8]
        RSB      a2,a2,#0
        STR      a2,[a3,#0]
        STR      lr,[a4,#4]
        STR      lr,[a3,#4]
        LDR      a2,[v8,#0x50]
        SUB      a1,a2,a1
        STR      a1,[a4,#8]
        RSB      a1,a1,#0
        STR      a1,[a3,#8]
        LDR      a3,[pc, #L000718-.-8]
        LDR      a4,[pc, #L000718-.-8]
        LDR      a2,[a3,#8]
        LDR      a3,[v2,#0x11c]
        LDR      a1,[a4,#0]
        BL       extractcels
        B        |L000360.J4.levelmain|
|L0006e4.J16.levelmain|
        BL       closelevelstuff
        MOV      a1,v1
        ADD      sp,sp,#0x30
        LDMIA    sp!,{v1-v8,pc}
L0006f4
        DCD      playerpos
L0006f8
        DCD      playerdir
L0006fc
        DCD      jd
L000700
        DCB      "Paus"
        DCB      "ed.\0"
L000708
        DCD      spoolmusicfile
L00070c
        DCD      camera
L000710
        DCD      unitvects
L000714
        DCD      xformvects
L000718
        DCD      campos
L00071c
        DCD      xformsquare
L000720
        DCD      unitsquare
L000724
        DCD      plusx
L000728
        DCD      minusx
L00072c
        DCD      plusz
L000730
        DCD      minusz

moveplayer
        STMDB    sp!,{v1-v5,lr}
        SUB      sp,sp,#0x10
        MOV      v2,#0
        STR      v2,[sp,#0xc]
        STR      v2,[sp,#8]
        STR      v2,[sp,#4]
        LDR      lr,[pc, #L000130-.-8]
        LDR      v1,[pc, #L0006fc-.-8]
        LDR      v3,[lr,#0x164]
        LDR      v4,[v1,#4]
        LDR      a4,[lr,#0x168]
        MUL      v4,v3,v4
        LDR      v5,[lr,#0x204]
        MOV      ip,#1
        MOV      ip,ip,LSL a4
        ADD      v5,v5,v4,ASR #16
        LDRB     a3,[v1,#0x11]
        STR      v5,[lr,#0x204]
        CMP      v5,ip
        STRGT    ip,[lr,#0x204]
        BGT      |L000794.J6.moveplayer|
        RSB      v4,ip,#0
        CMP      v5,v4
        STRLT    v4,[lr,#0x204]
|L000794.J6.moveplayer|
        LDR      v4,[v1,#0]
        LDR      v5,[lr,#0x208]
        MUL      v4,v3,v4
        ADD      v5,v5,v4,ASR #16
        STR      v5,[lr,#0x208]
        CMP      v5,ip
        STRGT    ip,[lr,#0x208]
        BGT      |L0007c0.J11.moveplayer|
        RSB      v4,ip,#0
        CMP      v5,v4
        STRLT    v4,[lr,#0x208]
|L0007c0.J11.moveplayer|
        LDR      v4,[v1,#8]
        MUL      v4,v3,v4
        LDR      v3,[lr,#0x20c]
        ADD      v3,v3,v4,ASR #16
        STR      v3,[lr,#0x20c]
        CMP      v3,ip
        BGT      |L0007e8.J18.moveplayer|
        RSB      ip,ip,#0
        CMP      v3,ip
        BGE      |L0007ec.J16.moveplayer|
|L0007e8.J18.moveplayer|
        STR      ip,[lr,#0x20c]
|L0007ec.J16.moveplayer|
        LDR      ip,[lr,#0x20c]
        MUL      ip,a3,ip
        MOV      ip,ip,LSL #16
        MOV      a4,ip,ASR a4
        LDR      ip,[a2,#0]
        ADD      a4,a4,ip
        STR      a4,[a2,#0]
        LDR      ip,[pc, #L000714-.-8]
        LDR      a4,[lr,#0x204]
        LDR      a2,[ip,#0xc]
        LDR      v3,[ip,#0]
        MUL      v4,a4,a2
        LDR      a2,[lr,#0x208]
        CMP      a4,#0
        MLA      v3,a2,v3,v4
        MUL      v3,a3,v3
        STR      v3,[sp,#4]
        LDR      v3,[ip,#0x10]
        LDR      v4,[ip,#4]
        MUL      v3,a4,v3
        MLA      v3,a2,v4,v3
        MUL      v3,a3,v3
        STR      v3,[sp,#8]
        LDR      v3,[ip,#0x14]
        LDR      ip,[ip,#8]
        MUL      v3,a4,v3
        MLA      ip,a2,ip,v3
        MUL      ip,a3,ip
        STR      ip,[sp,#0xc]
        STR      v2,[v1,#8]
        STR      v2,[v1,#4]
        STR      v2,[v1,#0]
        BLE      |L000884.J19.moveplayer|
        SUB      a4,a4,a3
        STR      a4,[lr,#0x204]
        CMP      a4,#0
        BGE      |L000898.J23.moveplayer|
        B        |L000894.J25.moveplayer|
|L000884.J19.moveplayer|
        ADD      a4,a4,a3
        STR      a4,[lr,#0x204]
        CMP      a4,#0
        BLE      |L000898.J23.moveplayer|
|L000894.J25.moveplayer|
        STR      v2,[lr,#0x204]
|L000898.J23.moveplayer|
        CMP      a2,#0
        BLE      |L0008b4.J26.moveplayer|
        SUB      a2,a2,a3
        STR      a2,[lr,#0x208]
        CMP      a2,#0
        BGE      |L0008c8.J30.moveplayer|
        B        |L0008c4.J32.moveplayer|
|L0008b4.J26.moveplayer|
        ADD      a2,a2,a3
        STR      a2,[lr,#0x208]
        CMP      a2,#0
        BLE      |L0008c8.J30.moveplayer|
|L0008c4.J32.moveplayer|
        STR      v2,[lr,#0x208]
|L0008c8.J30.moveplayer|
        LDR      a2,[lr,#0x20c]
        CMP      a2,#0
        BLE      |L0008e8.J33.moveplayer|
        SUB      a2,a2,a3
        STR      a2,[lr,#0x20c]
        CMP      a2,#0
        BGE      |L0008fc.J37.moveplayer|
        B        |L0008f8.J39.moveplayer|
|L0008e8.J33.moveplayer|
        ADD      a2,a2,a3
        STR      a2,[lr,#0x20c]
        CMP      a2,#0
        BLE      |L0008fc.J37.moveplayer|
|L0008f8.J39.moveplayer|
        STR      v2,[lr,#0x20c]
|L0008fc.J37.moveplayer|
        LDR      a2,[lr,#0x168]
        LDR      a3,[sp,#4]
        ADD      a2,a2,#4
        MOV      a3,a3,ASR a2
        STR      a3,[sp,#4]
        LDR      a3,[sp,#8]
        MOV      a4,#1
        MOV      a3,a3,ASR a2
        STR      a3,[sp,#8]
        LDR      a3,[sp,#0xc]
        STR      a4,[sp,#0]
        MOV      a2,a3,ASR a2
        STR      a2,[sp,#0xc]
        ADD      a2,sp,#4
        MOV      a3,#0
        BL       moveposition
        ADD      sp,sp,#0x10
        LDMIA    sp!,{v1-v5,pc}

fullstop
        LDR      a1,[pc, #L000130-.-8]
        MOV      a2,#0
        STR      a2,[a1,#0x20c]
        STR      a2,[a1,#0x208]
        STR      a2,[a1,#0x204]
        MOV      pc,lr

recoil
        LDR      a1,[pc, #L000130-.-8]
        LDR      a2,[a1,#0x168]
        SUB      a3,a2,#1
        MOV      a2,#1
        MOV      a2,a2,LSL a3
        LDR      a3,[a1,#0x204]
        SUB      a2,a3,a2
        STR      a2,[a1,#0x204]
        CMN      a2,#1
        MVNGT    a2,#0
        STRGT    a2,[a1,#0x204]
        MOV      pc,lr

moveposition
|L00098c.J2.moveposition|
        STMDB    sp!,{a1-v8,lr}
        SUB      sp,sp,#0x54
        MOV      v3,a3
        LDR      v2,[sp,#0x88]
        LDR      a4,[a2,#0]
        MOV      a3,#0x10000
        MOV      v1,a1
        CMP      a4,#0x10000
        STRGT    a3,[a2,#0]
        SUB      a1,a3,#0x20000
        BGT      |L0009c0.J6.moveposition|
        CMN      a4,#0x10000
        STRLT    a1,[a2,#0]
|L0009c0.J6.moveposition|
        LDR      a4,[a2,#8]
        CMP      a4,#0x10000
        STRGT    a3,[a2,#8]
        BGT      |L0009d8.J11.moveposition|
        CMN      a4,#0x10000
        STRLT    a1,[a2,#8]
|L0009d8.J11.moveposition|
        LDR      a1,[v1,#0]
        SUB      a1,a1,#0x6000
        STR      a1,[sp,#0x2c]
        LDR      a1,[v1,#0]
        ADD      a1,a1,#0x6000
        STR      a1,[sp,#0x34]
        LDR      a1,[v1,#8]
        SUB      a1,a1,#0x6000
        STR      a1,[sp,#0x30]
        LDR      a1,[v1,#8]
        ADD      a1,a1,#0x6000
        STR      a1,[sp,#0x38]
        LDR      a1,[a2,#0]
        STR      a1,[sp,#0x4c]
        LDR      a1,[a2,#8]
        STR      a1,[sp,#0x50]
        LDR      a3,[v1,#0]
        LDR      a1,[a2,#0]
        ADD      v6,a3,a1
        LDR      a3,[v1,#4]
        LDR      a1,[a2,#4]
        ADD      a1,a3,a1
        STR      a1,[sp,#8]
        LDR      a1,[v1,#8]
        LDR      a2,[a2,#8]
        ADD      a3,sp,#0x3c
        ADD      v5,a1,a2
        SUB      a1,v6,#0x6000
        STR      a1,[sp,#0x3c]
        ADD      a1,v6,#0x6000
        STR      a1,[sp,#0x44]
        SUB      a1,v5,#0x6000
        STR      a1,[sp,#0x40]
        ADD      a1,v5,#0x6000
        STR      a1,[sp,#0x48]
        ADD      a1,sp,#0x1c
        ADD      a2,sp,#0x2c
        BL       genpathbox
        LDR      a1,[v1,#0]
        MOV      v7,#8
        MOV      a2,a1,ASR #16
        STR      a2,[sp,#4]
        LDR      a1,[v1,#8]
        MOV      v4,#7
        MOV      a1,a1,ASR #16
        CMP      v2,#0
        MOVEQ    v7,#0x88
        MOV      v2,#0
        STR      a1,[sp,#0]
|L000a9c.J16.moveposition|
        LDR      a1,[pc, #L000c10-.-8]
        LDR      a1,[a1,v4,LSL #2]
        LDR      a2,[sp,#4]
        ADD      a2,a1,a2
        LDR      a1,[pc, #L000c14-.-8]
        LDR      a1,[a1,v4,LSL #2]
        LDR      a3,[sp,#0]
        ADD      a1,a1,a3
        LDR      a3,[pc, #L000c18-.-8]
        ADD      a3,a3,a1,LSL #9
        ADD      v8,a3,a2,LSL #3
        LDRB     a3,[v8,#6]
        TST      a3,#2
        BEQ      |L000b08.J19.moveposition|
        MOV      a2,a2,LSL #16
        MOV      a1,a1,LSL #16
        STR      a1,[sp,#0x10]
        STR      a2,[sp,#0xc]
        ADD      a2,a2,#0x10000
        ADD      a1,a1,#0x10000
        STR      a1,[sp,#0x18]
        STR      a2,[sp,#0x14]
        ADD      a2,sp,#0xc
        ADD      a1,sp,#0x1c
        MOV      a3,#1
        BL       checkcontact
        ADD      v2,a1,v2
|L000b08.J19.moveposition|
        LDR      a4,[sp,#0x60]
        CMP      a4,#0
        LDRNE    a1,[v8,#0]
        CMPNE    a1,#0
        BEQ      |L000b5c.J21.moveposition|
|L000b1c.J24.moveposition|
        LDR      v8,[a1,#0]
        CMP      a1,v3
        BEQ      |L000b54.J27.moveposition|
        LDRB     a2,[a1,#6]
        AND      a2,a2,v7
        CMP      a2,#8
        BNE      |L000b54.J27.moveposition|
        LDR      a2,[a1,#8]
        ADD      a3,sp,#0x1c
        LDR      a4,[a2,#0]
        MOV      a2,#9
        MOV      lr,pc
        MOV      pc,a4
        ADD      v2,a1,v2
|L000b54.J27.moveposition|
        MOVS     a1,v8
        BNE      |L000b1c.J24.moveposition|
|L000b5c.J21.moveposition|
        SUB      v4,v4,#1
        CMP      v4,#0
        BGE      |L000a9c.J16.moveposition|
        LDR      a3,[pc, #L000c18-.-8]
        LDR      a1,[sp,#0]
        LDR      a2,[sp,#4]
        LDR      a4,[sp,#0x60]
        ADD      a1,a3,a1,LSL #9
        ADD      a1,a1,a2,LSL #3
        CMP      a4,#0
        LDRNE    a1,[a1,#0]
        CMPNE    a1,#0
        BEQ      |L000bd0.J32.moveposition|
|L000b90.J35.moveposition|
        LDR      v4,[a1,#0]
        CMP      a1,v3
        BEQ      |L000bc8.J38.moveposition|
        LDRB     a2,[a1,#6]
        AND      a2,a2,v7
        CMP      a2,#8
        BNE      |L000bc8.J38.moveposition|
        LDR      a2,[a1,#8]
        ADD      a3,sp,#0x1c
        LDR      a4,[a2,#0]
        MOV      a2,#9
        MOV      lr,pc
        MOV      pc,a4
        ADD      v2,a1,v2
|L000bc8.J38.moveposition|
        MOVS     a1,v4
        BNE      |L000b90.J35.moveposition|
|L000bd0.J32.moveposition|
        CMP      v2,#0
        BEQ      |L000bf4.J42.moveposition|
        LDR      a1,[sp,#0x3c]
        ADD      a1,a1,#0x6000
        STR      a1,[v1,#0]
        LDR      a1,[sp,#0x40]
        ADD      a1,a1,#0x6000
        STR      a1,[v1,#8]
        B        |L000c04.J44.moveposition|
|L000bf4.J42.moveposition|
        STR      v5,[v1,#8]
        LDR      a1,[sp,#8]
        STR      a1,[v1,#4]
        STR      v6,[v1,#0]
|L000c04.J44.moveposition|
        MOV      a1,v2
        ADD      sp,sp,#0x64
        LDMIA    sp!,{v1-v8,pc}
L000c10
        DCD      |x$dataseg|+0x210
L000c14
        DCD      |x$dataseg|+0x230
L000c18
        DCD      levelmap

checkcontact
        STMDB    sp!,{v1-v6,lr}
        MOV      v1,a1
        LDR      a4,[a2,#8]
        LDR      a1,[a1,#0]
        MOV      v2,a2
        MOV      v3,a3
        CMP      a4,a1
        LDRGT    a1,[v1,#8]
        LDRGT    a2,[v2,#0]
        MOV      v5,#0
        CMPGT    a1,a2
        BLE      |L000dd8.J35.checkcontact|
        LDR      ip,[v1,#4]
        LDR      a1,[v2,#0xc]
        CMP      ip,a1
        BGE      |L000dd8.J35.checkcontact|
        LDR      lr,[v1,#0xc]
        LDR      a3,[v2,#4]
        CMP      lr,a3
        BLE      |L000dd8.J35.checkcontact|
        LDR      lr,[v1,#0x10]
        MOV      v4,#1
        CMP      lr,a4
        BGE      |L000ca0.J10.checkcontact|
        LDR      v6,[v1,#0x18]
        CMP      v6,a2
        BLE      |L000ca0.J10.checkcontact|
        LDR      v6,[v1,#0x14]
        CMP      v6,a1
        BGE      |L000ca0.J10.checkcontact|
        LDR      v6,[v1,#0x1c]
        CMP      v6,a3
        BGT      |L000dd0.J45.checkcontact|
|L000ca0.J10.checkcontact|
        LDR      v6,[v1,#0x20]
        CMP      v6,a4
        BGE      |L000ce8.J15.checkcontact|
        LDR      v6,[v1,#0x28]
        CMP      v6,a2
        BLE      |L000ce8.J15.checkcontact|
        LDR      v6,[v1,#0x24]
        CMP      v6,a1
        BGE      |L000ce8.J15.checkcontact|
        LDR      a1,[v1,#0x2c]
        CMP      a1,a3
        BLE      |L000ce8.J15.checkcontact|
        CMP      v3,#0
        BEQ      |L000dd0.J45.checkcontact|
|L000cd8.J21.checkcontact|
        MOV      a2,v2
        MOV      a1,v1
        BL       blockpath
        B        |L000dd0.J45.checkcontact|
|L000ce8.J15.checkcontact|
        LDR      a1,[v1,#0x34]
        LDR      v6,[v1,#0x30]
        MUL      v6,a1,v6
        CMP      v6,#0
        BLE      |L000d68.J22.checkcontact|
        CMP      ip,a3
        BGE      |L000d34.J24.checkcontact|
        SUB      a2,a4,lr
        BL       MulSF16
        LDR      a2,[v1,#0x30]
        BL       DivSF16
        LDR      a2,[v1,#0x1c]
        ADD      a2,a2,a1
        LDR      a1,[v2,#4]
        CMP      a2,a1
        BLE      |L000dd8.J35.checkcontact|
        CMP      v3,#0
        BNE      |L000cd8.J21.checkcontact|
        B        |L000dd0.J45.checkcontact|
|L000d34.J24.checkcontact|
        LDR      a3,[v1,#0x18]
        SUB      a2,a2,a3
        BL       MulSF16
        LDR      a2,[v1,#0x30]
        BL       DivSF16
        LDR      a2,[v1,#0x14]
        ADD      a2,a2,a1
        LDR      a1,[v2,#0xc]
        CMP      a2,a1
        BGE      |L000dd8.J35.checkcontact|
        CMP      v3,#0
        BNE      |L000cd8.J21.checkcontact|
        B        |L000dd0.J45.checkcontact|
|L000d68.J22.checkcontact|
        CMP      ip,a3
        BGE      |L000da4.J36.checkcontact|
        LDR      a3,[v1,#0x18]
        SUB      a2,a2,a3
        BL       MulSF16
        LDR      a2,[v1,#0x30]
        BL       DivSF16
        LDR      a2,[v1,#0x1c]
        ADD      a1,a2,a1
        LDR      a2,[v2,#4]
        CMP      a1,a2
        BLE      |L000dd8.J35.checkcontact|
        CMP      v3,#0
        BNE      |L000cd8.J21.checkcontact|
        B        |L000dd0.J45.checkcontact|
|L000da4.J36.checkcontact|
        SUB      a2,a4,lr
        BL       MulSF16
        LDR      a2,[v1,#0x30]
        BL       DivSF16
        LDR      a2,[v1,#0x14]
        ADD      a2,a2,a1
        LDR      a1,[v2,#0xc]
        CMP      a2,a1
        BGE      |L000dd8.J35.checkcontact|
        CMP      v3,#0
        BNE      |L000cd8.J21.checkcontact|
|L000dd0.J45.checkcontact|
        MOV      a1,v4
        LDMIA    sp!,{v1-v6,pc}
|L000dd8.J35.checkcontact|
        MOV      a1,v5
        LDMIA    sp!,{v1-v6,pc}

blockpath
        STMDB    sp!,{v1-v6,lr}
        MOV      v1,a1
        MOV      a1,a2
        LDR      a2,[v1,#0x30]
        CMP      a2,#0
        LDRLT    v6,[v1,#0x20]
        LDRLT    v5,[a1,#8]
        LDRGE    v6,[v1,#0x28]
        LDRGE    v5,[a1,#0]
        LDR      a3,[v1,#0x34]
        CMP      a3,#0
        LDRLT    v4,[v1,#0x24]
        LDRLT    v3,[a1,#0xc]
        LDRGE    v4,[v1,#0x2c]
        LDRGE    v3,[a1,#4]
        SUB      a1,v4,v3
        BL       MulSF16
        MOV      v2,a1
        CMP      a1,#0
        RSBLT    v2,v2,#0
        SUB      a1,v6,v5
        LDR      a2,[v1,#0x34]
        BL       MulSF16
        CMP      a1,#0
        RSBLT    a1,a1,#0
        CMP      v2,a1
        BLE      |L000e6c.J14.blockpath|
        LDR      a2,[v1,#0x20]
        SUB      a1,v5,v6
        ADD      a2,a2,a1
        STR      a2,[v1,#0x20]
        LDR      a2,[v1,#0x28]
        ADD      a1,a2,a1
        STR      a1,[v1,#0x28]
        B        |L000e88.J16.blockpath|
|L000e6c.J14.blockpath|
        LDR      a2,[v1,#0x24]
        SUB      a1,v3,v4
        ADD      a2,a2,a1
        STR      a2,[v1,#0x24]
        LDR      a2,[v1,#0x2c]
        ADD      a1,a2,a1
        STR      a1,[v1,#0x2c]
|L000e88.J16.blockpath|
        ADD      a3,v1,#0x20
        ADD      a2,v1,#0x10
        MOV      a1,v1
        BL       genpathbox
        MOV      a1,v1
        LDMIA    sp!,{v1-v6,lr}
        B        regenpath

genpathbox
        LDR      ip,[a2,#0]
        LDR      a4,[a3,#0]
        CMP      ip,a4
        STRGE    a4,[a1,#0]
        STRLT    ip,[a1,#0]
        LDR      ip,[a2,#4]
        LDR      a4,[a3,#4]
        CMP      ip,a4
        STRGE    a4,[a1,#4]
        STRLT    ip,[a1,#4]
        LDR      a4,[a2,#8]
        LDR      ip,[a3,#8]
        CMP      a4,ip
        STRLE    ip,[a1,#8]
        STRGT    a4,[a1,#8]
        LDR      a2,[a2,#0xc]
        LDR      a3,[a3,#0xc]
        CMP      a2,a3
        STRLE    a3,[a1,#0xc]
        STRGT    a2,[a1,#0xc]
        MOV      pc,lr

regenpath
        LDR      a2,[a1,#0x10]
        LDR      a3,[a1,#0x20]
        SUB      a2,a3,a2
        STR      a2,[a1,#0x30]
        LDR      a2,[a1,#0x24]
        LDR      a3,[a1,#0x14]
        SUB      a2,a2,a3
        STR      a2,[a1,#0x34]
        MOV      pc,lr

extractcels
        STMDB    sp!,{v1,lr}
        SUB      sp,sp,#0x48
        ADD      a4,sp,#0x10
        STMIA    a4,{a1,a2}
        ADD      a1,a3,#0x200000
        BIC      a1,a1,#0xff000000
        STR      a1,[sp,#0x18]
        SUB      a1,a3,#0x200000
        BIC      a1,a1,#0xff000000
        STR      a1,[sp,#0x1c]
        LDR      a1,[sp,#0x18]
        BL       SinF16
        STR      a1,[sp,#0x20]
        LDR      a1,[sp,#0x18]
        BL       CosF16
        STR      a1,[sp,#0x24]
        LDR      a1,[sp,#0x1c]
        BL       SinF16
        STR      a1,[sp,#0x28]
        LDR      a1,[sp,#0x1c]
        BL       CosF16
        STR      a1,[sp,#0x2c]
        BL       clearvertsused
        LDR      a1,[pc, #L001054-.-8]
        LDR      v1,[pc, #L000130-.-8]
        STR      a1,[v1,#0x108]
        LDR      a1,[pc, #L001058-.-8]
        STR      a1,[v1,#0x10c]
        MOV      a1,#0
        STR      a1,[v1,#0x110]
        STR      a1,[v1,#0x118]
        STR      a1,[v1,#0x114]
        ADD      a1,sp,#8
        BL       gettime
        LDR      a1,[sp,#0x18]
        MOVS     a1,a1,ASR #22
        BEQ      |L000fd0.J8.extractcels|
        CMP      a1,#1
        BEQ      |L000fdc.J7.extractcels|
        CMP      a1,#2
        BEQ      |L000fe8.J6.extractcels|
        CMP      a1,#3
        ADDEQ    a1,sp,#0x10
        BLEQ     extract_east
        B        |L000ff0.J4.extractcels|
|L000fd0.J8.extractcels|
        ADD      a1,sp,#0x10
        BL       extract_north
        B        |L000ff0.J4.extractcels|
|L000fdc.J7.extractcels|
        ADD      a1,sp,#0x10
        BL       extract_west
        B        |L000ff0.J4.extractcels|
|L000fe8.J6.extractcels|
        ADD      a1,sp,#0x10
        BL       extract_south
|L000ff0.J4.extractcels|
        MOV      a1,sp
        BL       gettime
        ADD      a2,sp,#8
        MOV      a1,sp
        BL       subtime
        BL       processgrid
        BL       processvisobs
        ADD      a1,sp,#8
        BL       gettime
        MOV      a2,sp
        ADD      a1,sp,#8
        BL       subtime
        MOV      a2,#1
        LDR      a1,[v1,#0x190]
        BL       WaitVBL
        LDR      a1,[v1,#0x1b0]
        BL       clearscreen
        BL       rendercels
        MOV      a1,sp
        BL       gettime
        ADD      a2,sp,#8
        MOV      a1,sp
        BL       subtime
        ADD      sp,sp,#0x48
        LDMIA    sp!,{v1,pc}
L001054
        DCD      visobs
L001058
        DCD      obverts

extract_north
|L00105c.J2.extract_north|
        STMDB    sp!,{a1,v1-v8,lr}
        SUB      sp,sp,#0x48
        LDR      a1,[sp,#0x48]
        LDR      a2,[a1,#0x14]
        CMP      a2,#0
        MOVEQ    a1,#0x38800000
        ADDEQ    a1,a1,#0xc0000001
        BEQ      |L00108c.J87.extract_north|
        LDR      a1,[sp,#0x48]
        LDR      a1,[a1,#0x10]
        BL       DivSF16
        RSB      a1,a1,#0
|L00108c.J87.extract_north|
        STR      a1,[sp,#0x20]
        LDR      a1,[sp,#0x48]
        LDR      a2,[a1,#0x1c]
        CMP      a2,#0
        MVNEQ    a1,#0x38800000
        ADDEQ    a1,a1,#0x40000000
        BEQ      |L0010b8.J88.extract_north|
        LDR      a1,[sp,#0x48]
        LDR      a1,[a1,#0x18]
        BL       DivSF16
        RSB      a1,a1,#0
|L0010b8.J88.extract_north|
        STR      a1,[sp,#0x1c]
        LDR      a1,[sp,#0x48]
        LDR      a1,[a1,#4]
        MOV      a2,a1,LSL #16
        MOV      a2,a2,LSR #16
        RSB      v1,a2,#0x10000
        MOV      a2,v1
        LDR      a1,[sp,#0x20]
        BL       MulSF16
        LDR      a2,[sp,#0x48]
        LDR      a2,[a2,#0]
        ADD      v5,a1,a2
        MOV      a2,v1
        LDR      a1,[sp,#0x1c]
        BL       MulSF16
        LDR      a2,[sp,#0x48]
        CMP      v1,#0x3000
        LDR      a2,[a2,#0]
        LDR      v1,[pc, #L001054-.-8]
        ADD      v4,a1,a2
        MOV      a1,#1
        STR      a1,[sp,#0]
        MOVLE    a1,#0
        STRLE    a1,[sp,#0]
        LDR      a1,[sp,#0x48]
        MOV      v2,a2,ASR #16
        LDR      a1,[a1,#4]
        STR      v2,[sp,#0x14]
        MOV      v3,a1,ASR #16
        ADD      a1,v3,#0x18
        STR      a1,[sp,#0xc]
        CMP      a1,#0x40
        MOVGT    a1,#0x40
        STRGT    a1,[sp,#0xc]
        SUB      a1,v2,#0x18
        STR      a1,[sp,#8]
        CMP      a1,#0
        MOVLT    a1,#0
        STRLT    a1,[sp,#8]
        ADD      a1,v2,#0x18
        STR      a1,[sp,#4]
        CMP      a1,#0x40
        MOVGE    a1,#0x3f
        STRGE    a1,[sp,#4]
        ADD      a1,v3,v3,LSL #6
        ADD      v8,a1,v2
        LDR      a1,[sp,#0xc]
        STR      v2,[sp,#0x18]
        CMP      v3,a1
        SUBLT    a4,v2,#1
        STRLT    a4,[sp,#0x44]
        BLT      |L00118c.J18.extract_north|
        B        |L001678.J90.extract_north|
|L00118c.J18.extract_north|
        CMP      v5,#0
        MOVLT    v5,#0
        CMP      v4,#0x400000
        MVNGE    v4,#0x3fc00000
        LDR      a1,[sp,#8]
        ADDGE    v4,v4,#0x40000000
        MOV      v7,v5,ASR #16
        CMP      v7,a1
        LDR      a1,[sp,#4]
        LDRLT    v7,[sp,#8]
        MOV      v6,v4,ASR #16
        CMP      v6,a1
        LDR      a1,[pc, #L000c18-.-8]
        MVN      a3,#0
        STR      a3,[sp,#0x10]
        LDRGT    v6,[sp,#4]
        ADD      a1,a1,v3,LSL #9
        ADD      a1,a1,v2,LSL #3
        MOV      a3,v2
        MOV      a2,v8
        CMP      v2,v6
        STR      a1,[sp,#0x40]
        BGT      |L0013f0.J54.extract_north|
|L0011e8.J29.extract_north|
        LDRB     a4,[a1,#6]
        LDR      lr,[sp,#0x10]
        TST      a4,#1
        BEQ      |L001204.J32.extract_north|
        CMP      lr,#0
        STRLT    a3,[sp,#0x10]
        B        |L001214.J36.extract_north|
|L001204.J32.extract_north|
        LDR      ip,[sp,#0x14]
        CMP      lr,ip
        MVNLE    lr,#0
        STRLE    lr,[sp,#0x10]
|L001214.J36.extract_north|
        AND      a4,a4,#8
        CMP      a4,#0
        LDREQ    a4,[a1,#0]
        CMPEQ    a4,#0
        BEQ      |L001394.J42.extract_north|
        CMP      a3,v2
        LDRNEB   a4,[a1,#7]
        TSTNE    a4,#2
        BEQ      |L0012bc.J43.extract_north|
        ADD      ip,a2,#0x41
        MOV      a4,ip,ASR #5
        LDR      lr,[pc, #L001680-.-8]
        STR      ip,[v1,#0]
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        LDR      ip,[pc, #L001680-.-8]
        MOV      a4,a2,ASR #5
        ADD      a4,ip,a4,LSL #2
        AND      ip,a2,#0x1f
        MOV      lr,#1
        MOV      lr,lr,LSL ip
        STR      a2,[v1,#4]
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        LDRB     a4,[a1,#6]
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#2
        STRB     a4,[v1,#0xa]
        LDRB     a4,[a1,#5]
        STRB     a4,[v1,#9]
        STR      a1,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L0012bc.J43.extract_north|
        LDRB     a4,[a1,#7]
        TST      a4,#4
        BEQ      |L00134c.J46.extract_north|
        LDR      lr,[pc, #L001680-.-8]
        MOV      a4,a2,ASR #5
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,a2,#0x1f
        MOV      lr,lr,LSL ip
        STR      a2,[v1,#0]
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        ADD      a4,a2,#1
        MOV      ip,a4,ASR #5
        LDR      lr,[pc, #L001680-.-8]
        STR      a4,[v1,#4]
        ADD      ip,lr,ip,LSL #2
        MOV      lr,#1
        AND      a4,a4,#0x1f
        MOV      lr,lr,LSL a4
        LDR      a4,[ip,#0]
        ORR      a4,lr,a4
        STR      a4,[ip,#0]
        LDRB     a4,[a1,#6]
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#4
        STRB     a4,[v1,#0xa]
        LDRB     a4,[a1,#4]
        STRB     a4,[v1,#9]
        STR      a1,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L00134c.J46.extract_north|
        LDR      a4,[a1,#0]
        CMP      a4,#0
        BEQ      |L001394.J42.extract_north|
        MVN      a4,#0
        STR      a4,[v1,#4]
        STR      a4,[v1,#0]
        LDRB     a4,[a1,#6]
        CMP      a3,v2
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        MOVEQ    a4,#4
        MOVNE    a4,#6
        STRB     a4,[v1,#0xa]
        STR      a1,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L001394.J42.extract_north|
        ADD      a3,a3,#1
        CMP      a3,v6
        ADD      a2,a2,#1
        ADD      a1,a1,#8
        BLE      |L0011e8.J29.extract_north|
        LDR      a3,[sp,#0x10]
        CMP      a3,#0
        BLT      |L0013f0.J54.extract_north|
        LDR      a1,[sp,#0]
        CMP      a1,#0
        BEQ      |L0013f0.J54.extract_north|
        LDR      a1,[sp,#0x48]
        ADD      a2,v3,#1
        LDR      a1,[a1,#4]
        RSB      a2,a1,a2,LSL #16
        LDR      a1,[sp,#0x48]
        LDR      a1,[a1,#0]
        LDR      a3,[sp,#0x10]
        RSB      a1,a1,a3,LSL #16
        BL       DivSF16
        LDR      a3,[sp,#0x10]
        STR      a1,[sp,#0x1c]
        MOV      v4,a3,LSL #16
|L0013f0.J54.extract_north|
        LDR      a3,[sp,#0x40]
        LDR      a4,[sp,#0x44]
        SUB      a2,v8,#1
        MVN      a1,#0
        SUB      a3,a3,#8
        CMP      a4,v7
        BLT      |L001644.J78.extract_north|
|L00140c.J57.extract_north|
        LDRB     ip,[a3,#6]
        TST      ip,#1
        BEQ      |L001424.J60.extract_north|
        CMP      a1,#0
        MOVLT    a1,a4
        B        |L001430.J64.extract_north|
|L001424.J60.extract_north|
        LDR      lr,[sp,#0x18]
        CMP      a1,lr
        MVNGE    a1,#0
|L001430.J64.extract_north|
        AND      ip,ip,#8
        CMP      ip,#0
        LDREQ    ip,[a3,#0]
        CMPEQ    ip,#0
        BEQ      |L0015f0.J70.extract_north|
        LDRB     ip,[a3,#7]
        TST      ip,#8
        BEQ      |L001500.J71.extract_north|
        ADD      ip,a2,#1
        STR      ip,[sp,#0x3c]
        STR      ip,[v1,#0]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x38]
        LDR      ip,[sp,#0x3c]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x38]
        LDR      ip,[ip,#0]
        ORR      ip,lr,ip
        LDR      lr,[sp,#0x38]
        STR      ip,[lr,#0]
        ADD      ip,a2,#0x42
        STR      ip,[sp,#0x34]
        STR      ip,[v1,#4]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x30]
        LDR      ip,[sp,#0x34]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x30]
        LDR      ip,[ip,#0]
        ORR      lr,lr,ip
        LDR      ip,[sp,#0x30]
        STR      lr,[ip,#0]
        LDRB     ip,[a3,#6]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOV      ip,#8
        STRB     ip,[v1,#0xa]
        LDRB     ip,[a3,#5]
        STRB     ip,[v1,#9]
        STR      a3,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L001500.J71.extract_north|
        LDRB     ip,[a3,#7]
        TST      ip,#4
        BEQ      |L0015b0.J73.extract_north|
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,a2,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      a2,[v1,#0]
        STR      ip,[sp,#0x2c]
        AND      ip,a2,#0x1f
        MOV      lr,#1
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x2c]
        LDR      ip,[ip,#0]
        ORR      ip,lr,ip
        LDR      lr,[sp,#0x2c]
        STR      ip,[lr,#0]
        ADD      ip,a2,#1
        STR      ip,[sp,#0x28]
        STR      ip,[v1,#4]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x24]
        LDR      ip,[sp,#0x28]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x24]
        LDR      ip,[ip,#0]
        ORR      lr,lr,ip
        LDR      ip,[sp,#0x24]
        STR      lr,[ip,#0]
        LDRB     ip,[a3,#6]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOV      ip,#4
        STRB     ip,[v1,#0xa]
        LDRB     ip,[a3,#4]
        STRB     ip,[v1,#9]
        STR      a3,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L0015b0.J73.extract_north|
        LDR      ip,[a3,#0]
        CMP      ip,#0
        BEQ      |L0015f0.J70.extract_north|
        MVN      ip,#0
        STR      ip,[v1,#4]
        STR      ip,[v1,#0]
        LDRB     ip,[a3,#6]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOV      ip,#0xc
        STRB     ip,[v1,#0xa]
        STR      a3,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L0015f0.J70.extract_north|
        SUB      a4,a4,#1
        CMP      a4,v7
        SUB      a2,a2,#1
        SUB      a3,a3,#8
        BGE      |L00140c.J57.extract_north|
        CMP      a1,#0
        BLT      |L001644.J78.extract_north|
        LDR      a2,[sp,#0]
        CMP      a2,#0
        BEQ      |L001644.J78.extract_north|
        LDR      a2,[sp,#0x48]
        ADD      v5,a1,#1
        LDR      a2,[a2,#4]
        LDR      a1,[sp,#0x48]
        ADD      a3,v3,#1
        LDR      a1,[a1,#0]
        RSB      a2,a2,a3,LSL #16
        RSB      a1,a1,v5,LSL #16
        BL       DivSF16
        MOV      v5,v5,LSL #16
        STR      a1,[sp,#0x20]
|L001644.J78.extract_north|
        LDR      a1,[sp,#0x20]
        STR      v6,[sp,#0x14]
        ADD      v5,v5,a1
        LDR      a1,[sp,#0x1c]
        STR      v7,[sp,#0x18]
        ADD      v4,v4,a1
        MOV      a1,#1
        STR      a1,[sp,#0]
        ADD      v3,v3,a1
        LDR      a1,[sp,#0xc]
        ADD      v8,v8,#0x41
        CMP      v3,a1
        BLT      |L00118c.J18.extract_north|
|L001678.J90.extract_north|
        ADD      sp,sp,#0x4c
        LDMIA    sp!,{v1-v8,pc}
L001680
        DCD      vertsused
L001684
        DCD      |x$dataseg|

extract_west
        STMDB    sp!,{a1,v1-v8,lr}
        SUB      sp,sp,#0x50
        LDR      a1,[sp,#0x50]
        LDR      a2,[a1,#0x10]
        CMP      a2,#0
        MOVEQ    a1,#0x38800000
        ADDEQ    a1,a1,#0xc0000001
        BEQ      |L0016b4.J87.extract_west|
        LDR      a1,[sp,#0x50]
        LDR      a1,[a1,#0x14]
        BL       DivSF16
|L0016b4.J87.extract_west|
        STR      a1,[sp,#0x20]
        LDR      a1,[sp,#0x50]
        LDR      a2,[a1,#0x18]
        CMP      a2,#0
        MVNEQ    a1,#0x38800000
        ADDEQ    a1,a1,#0x40000000
        BEQ      |L0016dc.J88.extract_west|
        LDR      a1,[sp,#0x50]
        LDR      a1,[a1,#0x1c]
        BL       DivSF16
|L0016dc.J88.extract_west|
        STR      a1,[sp,#0x1c]
        LDR      a1,[sp,#0x50]
        LDR      a1,[a1,#0]
        MOV      v1,a1,LSL #16
        MOV      v1,v1,LSR #16
        MOV      a2,v1
        LDR      a1,[sp,#0x20]
        BL       MulSF16
        LDR      a2,[sp,#0x50]
        LDR      a2,[a2,#4]
        ADD      v5,a1,a2
        MOV      a2,v1
        LDR      a1,[sp,#0x1c]
        BL       MulSF16
        LDR      a2,[sp,#0x50]
        CMP      v1,#0x3000
        LDR      a2,[a2,#4]
        LDR      v1,[pc, #L001054-.-8]
        ADD      v4,a1,a2
        MOV      a1,#1
        STR      a1,[sp,#0]
        MOVLE    a1,#0
        STRLE    a1,[sp,#0]
        LDR      a1,[sp,#0x50]
        MOV      v2,a2,ASR #16
        LDR      a1,[a1,#0]
        STR      v2,[sp,#0x14]
        MOV      v3,a1,ASR #16
        SUB      a1,v3,#0x18
        STR      a1,[sp,#0xc]
        CMP      a1,#0
        MOVLT    a1,#0
        STRLT    a1,[sp,#0xc]
        SUB      a1,v2,#0x18
        STR      a1,[sp,#8]
        CMP      a1,#0
        MOVLT    a1,#0
        STRLT    a1,[sp,#8]
        ADD      a1,v2,#0x18
        STR      a1,[sp,#4]
        CMP      a1,#0x40
        MOVGE    a1,#0x3f
        STRGE    a1,[sp,#4]
        ADD      a1,v2,v2,LSL #6
        ADD      v8,a1,v3
        LDR      a1,[sp,#0xc]
        STR      v2,[sp,#0x18]
        CMP      v3,a1
        BLT      |L001ca4.J90.extract_west|
        LDR      a1,[pc, #L000c18-.-8]
        SUB      a4,v2,#1
        ADD      a1,a1,v2,LSL #9
        STR      a1,[sp,#0x4c]
        STR      a4,[sp,#0x48]
|L0017b4.J18.extract_west|
        CMP      v5,#0
        MOVLT    v5,#0
        CMP      v4,#0x400000
        MVNGE    v4,#0x3fc00000
        LDR      a1,[sp,#8]
        ADDGE    v4,v4,#0x40000000
        MOV      v7,v5,ASR #16
        CMP      v7,a1
        LDR      a1,[sp,#4]
        LDRLT    v7,[sp,#8]
        MOV      v6,v4,ASR #16
        CMP      v6,a1
        LDRGT    v6,[sp,#4]
        LDR      a1,[sp,#0x4c]
        MVN      a2,#0
        STR      a2,[sp,#0x10]
        MOV      a2,v2
        MOV      a3,v8
        ADD      a1,a1,v3,LSL #3
        STR      a1,[sp,#0x44]
        CMP      v2,v6
        BGT      |L001a14.J54.extract_west|
|L00180c.J29.extract_west|
        LDRB     a4,[a1,#6]
        LDR      ip,[sp,#0x10]
        TST      a4,#1
        BEQ      |L001828.J32.extract_west|
        CMP      ip,#0
        STRLT    a2,[sp,#0x10]
        B        |L001838.J36.extract_west|
|L001828.J32.extract_west|
        LDR      lr,[sp,#0x14]
        CMP      ip,lr
        MVNLE    ip,#0
        STRLE    ip,[sp,#0x10]
|L001838.J36.extract_west|
        AND      a4,a4,#8
        CMP      a4,#0
        LDREQ    a4,[a1,#0]
        CMPEQ    a4,#0
        BEQ      |L0019bc.J42.extract_west|
        CMP      a2,v2
        LDRNEB   a4,[a1,#7]
        TSTNE    a4,#4
        BEQ      |L0018e0.J43.extract_west|
        LDR      lr,[pc, #L001680-.-8]
        MOV      a4,a3,ASR #5
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,a3,#0x1f
        MOV      lr,lr,LSL ip
        STR      a3,[v1,#0]
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        ADD      a4,a3,#1
        MOV      ip,a4,ASR #5
        LDR      lr,[pc, #L001680-.-8]
        STR      a4,[v1,#4]
        ADD      ip,lr,ip,LSL #2
        MOV      lr,#1
        AND      a4,a4,#0x1f
        MOV      lr,lr,LSL a4
        LDR      a4,[ip,#0]
        ORR      a4,lr,a4
        STR      a4,[ip,#0]
        LDRB     a4,[a1,#6]
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#4
        STRB     a4,[v1,#0xa]
        LDRB     a4,[a1,#4]
        STRB     a4,[v1,#9]
        STR      a1,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L0018e0.J43.extract_west|
        LDRB     a4,[a1,#7]
        TST      a4,#8
        BEQ      |L001974.J46.extract_west|
        ADD      ip,a3,#1
        MOV      a4,ip,ASR #5
        LDR      lr,[pc, #L001680-.-8]
        STR      ip,[v1,#0]
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        ADD      a4,a3,#0x42
        MOV      ip,a4,ASR #5
        LDR      lr,[pc, #L001680-.-8]
        STR      a4,[v1,#4]
        ADD      ip,lr,ip,LSL #2
        MOV      lr,#1
        AND      a4,a4,#0x1f
        MOV      a4,lr,LSL a4
        LDR      lr,[ip,#0]
        ORR      a4,a4,lr
        STR      a4,[ip,#0]
        LDRB     a4,[a1,#6]
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#8
        STRB     a4,[v1,#0xa]
        LDRB     a4,[a1,#5]
        STRB     a4,[v1,#9]
        STR      a1,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L001974.J46.extract_west|
        LDR      a4,[a1,#0]
        CMP      a4,#0
        BEQ      |L0019bc.J42.extract_west|
        MVN      a4,#0
        STR      a4,[v1,#4]
        STR      a4,[v1,#0]
        LDRB     a4,[a1,#6]
        CMP      a2,v2
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        MOVEQ    a4,#8
        MOVNE    a4,#0xc
        STRB     a4,[v1,#0xa]
        STR      a1,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L0019bc.J42.extract_west|
        ADD      a2,a2,#1
        CMP      a2,v6
        ADD      a3,a3,#0x41
        ADD      a1,a1,#0x200
        BLE      |L00180c.J29.extract_west|
        LDR      a2,[sp,#0x10]
        CMP      a2,#0
        BLT      |L001a14.J54.extract_west|
        LDR      a1,[sp,#0]
        CMP      a1,#0
        BEQ      |L001a14.J54.extract_west|
        LDR      a1,[sp,#0x50]
        LDR      a1,[a1,#4]
        LDR      a2,[sp,#0x10]
        RSB      a1,a1,a2,LSL #16
        LDR      a2,[sp,#0x50]
        LDR      a2,[a2,#0]
        SUB      a2,a2,v3,LSL #16
        BL       DivSF16
        LDR      a2,[sp,#0x10]
        STR      a1,[sp,#0x1c]
        MOV      v4,a2,LSL #16
|L001a14.J54.extract_west|
        LDR      a3,[sp,#0x44]
        LDR      a4,[sp,#0x48]
        SUB      a2,v8,#0x41
        MVN      a1,#0
        SUB      a3,a3,#0x200
        CMP      a4,v7
        BLT      |L001c70.J78.extract_west|
|L001a30.J57.extract_west|
        LDRB     ip,[a3,#6]
        TST      ip,#1
        BEQ      |L001a48.J60.extract_west|
        CMP      a1,#0
        MOVLT    a1,a4
        B        |L001a54.J64.extract_west|
|L001a48.J60.extract_west|
        LDR      lr,[sp,#0x18]
        CMP      a1,lr
        MVNGE    a1,#0
|L001a54.J64.extract_west|
        AND      ip,ip,#8
        CMP      ip,#0
        LDREQ    ip,[a3,#0]
        CMPEQ    ip,#0
        BEQ      |L001c20.J70.extract_west|
        LDRB     ip,[a3,#7]
        TST      ip,#1
        BEQ      |L001b24.J71.extract_west|
        ADD      ip,a2,#0x42
        STR      ip,[sp,#0x40]
        STR      ip,[v1,#0]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x3c]
        LDR      ip,[sp,#0x40]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x3c]
        LDR      ip,[ip,#0]
        ORR      ip,lr,ip
        LDR      lr,[sp,#0x3c]
        STR      ip,[lr,#0]
        ADD      ip,a2,#0x41
        STR      ip,[sp,#0x38]
        STR      ip,[v1,#4]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x34]
        LDR      ip,[sp,#0x38]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      ip,lr,LSL ip
        LDR      lr,[sp,#0x34]
        LDR      lr,[lr,#0]
        ORR      lr,ip,lr
        LDR      ip,[sp,#0x34]
        STR      lr,[ip,#0]
        LDRB     ip,[a3,#6]
        MOV      lr,#1
        STRB     ip,[v1,#0xb]
        STRB     lr,[v1,#0xa]
        LDRB     ip,[a3,#4]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#9]
        STR      a3,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L001b24.J71.extract_west|
        LDRB     ip,[a3,#7]
        TST      ip,#8
        BEQ      |L001be0.J73.extract_west|
        ADD      ip,a2,#1
        STR      ip,[sp,#0x30]
        STR      ip,[v1,#0]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x2c]
        LDR      ip,[sp,#0x30]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x2c]
        LDR      ip,[ip,#0]
        ORR      ip,lr,ip
        LDR      lr,[sp,#0x2c]
        STR      ip,[lr,#0]
        ADD      ip,a2,#0x42
        STR      ip,[sp,#0x28]
        STR      ip,[v1,#4]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x24]
        LDR      ip,[sp,#0x28]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x24]
        LDR      ip,[ip,#0]
        ORR      lr,lr,ip
        LDR      ip,[sp,#0x24]
        STR      lr,[ip,#0]
        LDRB     ip,[a3,#6]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOV      ip,#8
        STRB     ip,[v1,#0xa]
        LDRB     ip,[a3,#5]
        STRB     ip,[v1,#9]
        STR      a3,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L001be0.J73.extract_west|
        LDR      ip,[a3,#0]
        CMP      ip,#0
        BEQ      |L001c20.J70.extract_west|
        MVN      ip,#0
        STR      ip,[v1,#4]
        STR      ip,[v1,#0]
        LDRB     ip,[a3,#6]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOV      ip,#9
        STRB     ip,[v1,#0xa]
        STR      a3,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L001c20.J70.extract_west|
        SUB      a4,a4,#1
        CMP      a4,v7
        SUB      a2,a2,#0x41
        SUB      a3,a3,#0x200
        BGE      |L001a30.J57.extract_west|
        CMP      a1,#0
        BLT      |L001c70.J78.extract_west|
        LDR      a2,[sp,#0]
        CMP      a2,#0
        BEQ      |L001c70.J78.extract_west|
        LDR      a2,[sp,#0x50]
        ADD      v5,a1,#1
        LDR      a2,[a2,#4]
        RSB      a1,a2,v5,LSL #16
        LDR      a2,[sp,#0x50]
        LDR      a2,[a2,#0]
        SUB      a2,a2,v3,LSL #16
        BL       DivSF16
        MOV      v5,v5,LSL #16
        STR      a1,[sp,#0x20]
|L001c70.J78.extract_west|
        LDR      a1,[sp,#0x20]
        SUB      v3,v3,#1
        ADD      v5,v5,a1
        LDR      a1,[sp,#0x1c]
        STR      v6,[sp,#0x14]
        ADD      v4,v4,a1
        MOV      a1,#1
        STR      a1,[sp,#0]
        LDR      a1,[sp,#0xc]
        STR      v7,[sp,#0x18]
        SUB      v8,v8,#1
        CMP      v3,a1
        BGE      |L0017b4.J18.extract_west|
|L001ca4.J90.extract_west|
        ADD      sp,sp,#0x54
        LDMIA    sp!,{v1-v8,pc}

extract_south
        STMDB    sp!,{a1,v1-v8,lr}
        SUB      sp,sp,#0x4c
        LDR      a1,[sp,#0x4c]
        LDR      a2,[a1,#0x14]
        CMP      a2,#0
        MVNEQ    a1,#0x38800000
        ADDEQ    a1,a1,#0x40000000
        BEQ      |L001cd8.J87.extract_south|
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#0x10]
        BL       DivSF16
|L001cd8.J87.extract_south|
        STR      a1,[sp,#0x20]
        LDR      a1,[sp,#0x4c]
        LDR      a2,[a1,#0x1c]
        CMP      a2,#0
        MOVEQ    a1,#0x38800000
        ADDEQ    a1,a1,#0xc0000001
        BEQ      |L001d00.J88.extract_south|
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#0x18]
        BL       DivSF16
|L001d00.J88.extract_south|
        STR      a1,[sp,#0x1c]
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#4]
        MOV      v1,a1,LSL #16
        MOV      v1,v1,LSR #16
        MOV      a2,v1
        LDR      a1,[sp,#0x20]
        BL       MulSF16
        LDR      a2,[sp,#0x4c]
        LDR      a2,[a2,#0]
        ADD      v4,a1,a2
        MOV      a2,v1
        LDR      a1,[sp,#0x1c]
        BL       MulSF16
        LDR      a2,[sp,#0x4c]
        CMP      v1,#0x3000
        LDR      a2,[a2,#0]
        LDR      v1,[pc, #L001054-.-8]
        ADD      v5,a1,a2
        MOV      a1,#1
        STR      a1,[sp,#0]
        MOVLE    a1,#0
        STRLE    a1,[sp,#0]
        LDR      a1,[sp,#0x4c]
        MOV      v2,a2,ASR #16
        LDR      a1,[a1,#4]
        STR      v2,[sp,#0x14]
        MOV      v3,a1,ASR #16
        SUB      a1,v3,#0x18
        STR      a1,[sp,#0xc]
        CMP      a1,#0
        MOVLT    a1,#0
        STRLT    a1,[sp,#0xc]
        ADD      a1,v2,#0x18
        STR      a1,[sp,#8]
        CMP      a1,#0x40
        MOVGE    a1,#0x3f
        STRGE    a1,[sp,#8]
        SUB      a1,v2,#0x18
        STR      a1,[sp,#4]
        CMP      a1,#0
        MOVLT    a1,#0
        STRLT    a1,[sp,#4]
        ADD      a1,v3,v3,LSL #6
        ADD      v8,a1,v2
        LDR      a1,[sp,#0xc]
        STR      v2,[sp,#0x18]
        CMP      v3,a1
        ADDGE    a3,v2,#1
        STRGE    a3,[sp,#0x48]
        BGE      |L001dd0.J18.extract_south|
        B        |L0022c4.J90.extract_south|
|L001dd0.J18.extract_south|
        CMP      v4,#0x400000
        MVNGE    v4,#0x3fc00000
        ADDGE    v4,v4,#0x40000000
        CMP      v5,#0
        LDR      a1,[sp,#8]
        MOVLT    v5,#0
        MOV      v7,v4,ASR #16
        CMP      v7,a1
        LDR      a1,[sp,#4]
        LDRGT    v7,[sp,#8]
        MOV      v6,v5,ASR #16
        CMP      v6,a1
        LDR      a1,[pc, #L0022cc-.-8]
        LDRLT    v6,[sp,#4]
        ADD      a1,a1,v3,LSL #9
        ADD      a1,a1,v2,LSL #3
        MOV      a3,v8
        MOV      a2,v2
        CMP      v2,v6
        STR      a1,[sp,#0x44]
        MVN      a4,#0
        BLT      |L002074.J54.extract_south|
|L001e28.J29.extract_south|
        LDRB     ip,[a1,#6]
        TST      ip,#1
        BEQ      |L001e40.J32.extract_south|
        CMP      a4,#0
        MOVLT    a4,a2
        B        |L001e4c.J36.extract_south|
|L001e40.J32.extract_south|
        LDR      lr,[sp,#0x14]
        CMP      a4,lr
        MVNGE    a4,#0
|L001e4c.J36.extract_south|
        AND      ip,ip,#8
        CMP      ip,#0
        LDREQ    ip,[a1,#0]
        CMPEQ    ip,#0
        BEQ      |L002024.J42.extract_south|
        CMP      a2,v2
        LDRNEB   ip,[a1,#7]
        TSTNE    ip,#8
        BEQ      |L001f20.J43.extract_south|
        ADD      ip,a3,#1
        STR      ip,[sp,#0x40]
        STR      ip,[v1,#0]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x3c]
        LDR      ip,[sp,#0x40]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x3c]
        LDR      ip,[ip,#0]
        ORR      ip,lr,ip
        LDR      lr,[sp,#0x3c]
        STR      ip,[lr,#0]
        ADD      ip,a3,#0x42
        STR      ip,[sp,#0x38]
        STR      ip,[v1,#4]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x34]
        LDR      ip,[sp,#0x38]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x34]
        LDR      ip,[ip,#0]
        ORR      lr,lr,ip
        LDR      ip,[sp,#0x34]
        STR      lr,[ip,#0]
        LDRB     ip,[a1,#6]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOV      ip,#8
        STRB     ip,[v1,#0xa]
        LDRB     ip,[a1,#5]
        STRB     ip,[v1,#9]
        STR      a1,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L001f20.J43.extract_south|
        LDRB     ip,[a1,#7]
        TST      ip,#1
        BEQ      |L001fdc.J46.extract_south|
        ADD      ip,a3,#0x42
        STR      ip,[sp,#0x30]
        STR      ip,[v1,#0]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x2c]
        LDR      ip,[sp,#0x30]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x2c]
        LDR      ip,[ip,#0]
        ORR      ip,lr,ip
        LDR      lr,[sp,#0x2c]
        STR      ip,[lr,#0]
        ADD      ip,a3,#0x41
        STR      ip,[sp,#0x28]
        STR      ip,[v1,#4]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x24]
        LDR      ip,[sp,#0x28]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      ip,lr,LSL ip
        LDR      lr,[sp,#0x24]
        LDR      lr,[lr,#0]
        ORR      lr,ip,lr
        LDR      ip,[sp,#0x24]
        STR      lr,[ip,#0]
        LDRB     ip,[a1,#6]
        MOV      lr,#1
        STRB     ip,[v1,#0xb]
        STRB     lr,[v1,#0xa]
        LDRB     ip,[a1,#4]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#9]
        STR      a1,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L001fdc.J46.extract_south|
        LDR      ip,[a1,#0]
        CMP      ip,#0
        BEQ      |L002024.J42.extract_south|
        MVN      ip,#0
        STR      ip,[v1,#4]
        STR      ip,[v1,#0]
        LDRB     ip,[a1,#6]
        CMP      a2,v2
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOVEQ    ip,#1
        MOVNE    ip,#9
        STRB     ip,[v1,#0xa]
        STR      a1,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L002024.J42.extract_south|
        SUB      a2,a2,#1
        CMP      a2,v6
        SUB      a3,a3,#1
        SUB      a1,a1,#8
        BGE      |L001e28.J29.extract_south|
        CMP      a4,#0
        BLT      |L002074.J54.extract_south|
        LDR      a1,[sp,#0]
        CMP      a1,#0
        BEQ      |L002074.J54.extract_south|
        LDR      a1,[sp,#0x4c]
        ADD      v5,a4,#1
        LDR      a1,[a1,#4]
        SUB      a2,a1,v3,LSL #16
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#0]
        RSB      a1,a1,v5,LSL #16
        BL       DivSF16
        MOV      v5,v5,LSL #16
        STR      a1,[sp,#0x1c]
|L002074.J54.extract_south|
        MVN      a3,#0
        STR      a3,[sp,#0x10]
        LDR      a3,[sp,#0x48]
        LDR      a2,[sp,#0x44]
        ADD      a1,v8,#1
        CMP      a3,v7
        ADD      a2,a2,#8
        BGT      |L002290.J78.extract_south|
|L002094.J57.extract_south|
        LDRB     a4,[a2,#6]
        LDR      lr,[sp,#0x10]
        TST      a4,#1
        BEQ      |L0020b0.J60.extract_south|
        CMP      lr,#0
        STRLT    a3,[sp,#0x10]
        B        |L0020c0.J64.extract_south|
|L0020b0.J60.extract_south|
        LDR      ip,[sp,#0x18]
        CMP      lr,ip
        MVNLE    lr,#0
        STRLE    lr,[sp,#0x10]
|L0020c0.J64.extract_south|
        AND      a4,a4,#8
        CMP      a4,#0
        LDREQ    a4,[a2,#0]
        CMPEQ    a4,#0
        BEQ      |L002238.J70.extract_south|
        LDRB     a4,[a2,#7]
        TST      a4,#2
        BEQ      |L002164.J71.extract_south|
        ADD      ip,a1,#0x41
        MOV      a4,ip,ASR #5
        LDR      lr,[pc, #L001680-.-8]
        STR      ip,[v1,#0]
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        LDR      ip,[pc, #L001680-.-8]
        MOV      a4,a1,ASR #5
        ADD      a4,ip,a4,LSL #2
        AND      ip,a1,#0x1f
        MOV      lr,#1
        MOV      ip,lr,LSL ip
        STR      a1,[v1,#4]
        LDR      lr,[a4,#0]
        ORR      ip,ip,lr
        STR      ip,[a4,#0]
        LDRB     a4,[a2,#6]
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#2
        STRB     a4,[v1,#0xa]
        LDRB     a4,[a2,#5]
        STRB     a4,[v1,#9]
        STR      a2,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L002164.J71.extract_south|
        LDRB     a4,[a2,#7]
        TST      a4,#1
        BEQ      |L0021f8.J73.extract_south|
        ADD      ip,a1,#0x42
        MOV      a4,ip,ASR #5
        LDR      lr,[pc, #L001680-.-8]
        STR      ip,[v1,#0]
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        ADD      a4,a1,#0x41
        MOV      ip,a4,ASR #5
        LDR      lr,[pc, #L001680-.-8]
        STR      a4,[v1,#4]
        ADD      ip,lr,ip,LSL #2
        MOV      lr,#1
        AND      a4,a4,#0x1f
        MOV      a4,lr,LSL a4
        LDR      lr,[ip,#0]
        ORR      a4,a4,lr
        STR      a4,[ip,#0]
        LDRB     a4,[a2,#6]
        MOV      lr,#1
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        STRB     lr,[v1,#0xa]
        LDRB     a4,[a2,#4]
        STRB     a4,[v1,#9]
        STR      a2,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,lr
        STR      a4,[ip,#0x118]
|L0021f8.J73.extract_south|
        LDR      a4,[a2,#0]
        CMP      a4,#0
        BEQ      |L002238.J70.extract_south|
        MVN      a4,#0
        STR      a4,[v1,#4]
        STR      a4,[v1,#0]
        LDRB     a4,[a2,#6]
        LDR      ip,[pc, #L001684-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#3
        STRB     a4,[v1,#0xa]
        STR      a2,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L002238.J70.extract_south|
        ADD      a3,a3,#1
        CMP      a3,v7
        ADD      a1,a1,#1
        ADD      a2,a2,#8
        BLE      |L002094.J57.extract_south|
        LDR      a3,[sp,#0x10]
        CMP      a3,#0
        BLT      |L002290.J78.extract_south|
        LDR      a1,[sp,#0]
        CMP      a1,#0
        BEQ      |L002290.J78.extract_south|
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#4]
        SUB      a2,a1,v3,LSL #16
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#0]
        LDR      a3,[sp,#0x10]
        RSB      a1,a1,a3,LSL #16
        BL       DivSF16
        LDR      a3,[sp,#0x10]
        STR      a1,[sp,#0x20]
        MOV      v4,a3,LSL #16
|L002290.J78.extract_south|
        LDR      a1,[sp,#0x20]
        SUB      v3,v3,#1
        ADD      v4,v4,a1
        LDR      a1,[sp,#0x1c]
        STR      v6,[sp,#0x14]
        ADD      v5,v5,a1
        MOV      a1,#1
        STR      a1,[sp,#0]
        LDR      a1,[sp,#0xc]
        STR      v7,[sp,#0x18]
        SUB      v8,v8,#0x41
        CMP      v3,a1
        BGE      |L001dd0.J18.extract_south|
|L0022c4.J90.extract_south|
        ADD      sp,sp,#0x50
        LDMIA    sp!,{v1-v8,pc}
L0022cc
        DCD      levelmap

extract_east
|L0022d0.J2.extract_east|
        STMDB    sp!,{a1,v1-v8,lr}
        SUB      sp,sp,#0x4c
        LDR      a1,[sp,#0x4c]
        LDR      a2,[a1,#0x10]
        CMP      a2,#0
        MVNEQ    a1,#0x38800000
        ADDEQ    a1,a1,#0x40000000
        BEQ      |L002300.J87.extract_east|
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#0x14]
        BL       DivSF16
        RSB      a1,a1,#0
|L002300.J87.extract_east|
        STR      a1,[sp,#0x20]
        LDR      a1,[sp,#0x4c]
        LDR      a2,[a1,#0x18]
        CMP      a2,#0
        MOVEQ    a1,#0x38800000
        ADDEQ    a1,a1,#0xc0000001
        BEQ      |L00232c.J88.extract_east|
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#0x1c]
        BL       DivSF16
        RSB      a1,a1,#0
|L00232c.J88.extract_east|
        STR      a1,[sp,#0x1c]
        LDR      a1,[sp,#0x4c]
        LDR      a1,[a1,#0]
        MOV      a2,a1,LSL #16
        MOV      a2,a2,LSR #16
        RSB      v1,a2,#0x10000
        MOV      a2,v1
        LDR      a1,[sp,#0x20]
        BL       MulSF16
        LDR      a3,[sp,#0x4c]
        LDR      a2,[a3,#4]
        ADD      v4,a1,a2
        MOV      a2,v1
        LDR      a1,[sp,#0x1c]
        BL       MulSF16
        LDR      a3,[sp,#0x4c]
        CMP      v1,#0x3000
        LDR      a2,[a3,#4]
        LDR      v1,[pc, #L0028f8-.-8]
        ADD      v5,a1,a2
        MOV      a1,#1
        STR      a1,[sp,#0]
        MOVLE    a1,#0
        STRLE    a1,[sp,#0]
        LDR      a1,[sp,#0x4c]
        MOV      v2,a2,ASR #16
        LDR      a1,[a1,#0]
        STR      v2,[sp,#0x14]
        MOV      v3,a1,ASR #16
        ADD      a1,v3,#0x18
        STR      a1,[sp,#0xc]
        CMP      a1,#0x40
        MOVGT    a1,#0x40
        STRGT    a1,[sp,#0xc]
        ADD      a1,v2,#0x18
        STR      a1,[sp,#8]
        CMP      a1,#0x40
        MOVGE    a1,#0x3f
        STRGE    a1,[sp,#8]
        SUB      a1,v2,#0x18
        STR      a1,[sp,#4]
        CMP      a1,#0
        MOVLT    a1,#0
        STRLT    a1,[sp,#4]
        ADD      a1,v2,v2,LSL #6
        ADD      v8,a1,v3
        LDR      a1,[sp,#0xc]
        STR      v2,[sp,#0x18]
        CMP      v3,a1
        BGE      |L0028f0.J90.extract_east|
        LDR      a1,[pc, #L0022cc-.-8]
        ADD      a3,v2,#1
        ADD      a1,a1,v2,LSL #9
        STR      a1,[sp,#0x48]
        STR      a3,[sp,#0x44]
|L002408.J18.extract_east|
        CMP      v4,#0x400000
        MVNGE    v4,#0x3fc00000
        ADDGE    v4,v4,#0x40000000
        CMP      v5,#0
        LDR      a1,[sp,#8]
        MOVLT    v5,#0
        MOV      v7,v4,ASR #16
        CMP      v7,a1
        LDR      a1,[sp,#4]
        LDRGT    v7,[sp,#8]
        MOV      v6,v5,ASR #16
        CMP      v6,a1
        LDR      a1,[sp,#0x48]
        LDRLT    v6,[sp,#4]
        MOV      a3,v8
        MOV      a2,v2
        ADD      a1,a1,v3,LSL #3
        STR      a1,[sp,#0x40]
        CMP      v2,v6
        MVN      a4,#0
        BLT      |L0026a0.J54.extract_east|
|L00245c.J29.extract_east|
        LDRB     ip,[a1,#6]
        TST      ip,#1
        BEQ      |L002474.J32.extract_east|
        CMP      a4,#0
        MOVLT    a4,a2
        B        |L002480.J36.extract_east|
|L002474.J32.extract_east|
        LDR      lr,[sp,#0x14]
        CMP      a4,lr
        MVNGE    a4,#0
|L002480.J36.extract_east|
        AND      ip,ip,#8
        CMP      ip,#0
        LDREQ    ip,[a1,#0]
        CMPEQ    ip,#0
        BEQ      |L00264c.J42.extract_east|
        CMP      a2,v2
        LDRNEB   ip,[a1,#7]
        TSTNE    ip,#1
        BEQ      |L002554.J43.extract_east|
        ADD      ip,a3,#0x42
        STR      ip,[sp,#0x3c]
        STR      ip,[v1,#0]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x38]
        LDR      ip,[sp,#0x3c]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x38]
        LDR      ip,[ip,#0]
        ORR      ip,lr,ip
        LDR      lr,[sp,#0x38]
        STR      ip,[lr,#0]
        ADD      ip,a3,#0x41
        STR      ip,[sp,#0x34]
        STR      ip,[v1,#4]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x30]
        LDR      ip,[sp,#0x34]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      ip,lr,LSL ip
        LDR      lr,[sp,#0x30]
        LDR      lr,[lr,#0]
        ORR      lr,ip,lr
        LDR      ip,[sp,#0x30]
        STR      lr,[ip,#0]
        LDRB     ip,[a1,#6]
        MOV      lr,#1
        STRB     ip,[v1,#0xb]
        STRB     lr,[v1,#0xa]
        LDRB     ip,[a1,#4]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#9]
        STR      a1,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L002554.J43.extract_east|
        LDRB     ip,[a1,#7]
        TST      ip,#2
        BEQ      |L002604.J46.extract_east|
        ADD      ip,a3,#0x41
        STR      ip,[sp,#0x2c]
        STR      ip,[v1,#0]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,ip,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      ip,[sp,#0x28]
        LDR      ip,[sp,#0x2c]
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x28]
        LDR      ip,[ip,#0]
        ORR      ip,lr,ip
        LDR      lr,[sp,#0x28]
        STR      ip,[lr,#0]
        LDR      lr,[pc, #L001680-.-8]
        MOV      ip,a3,ASR #5
        ADD      ip,lr,ip,LSL #2
        STR      a3,[v1,#4]
        STR      ip,[sp,#0x24]
        AND      ip,a3,#0x1f
        MOV      lr,#1
        MOV      lr,lr,LSL ip
        LDR      ip,[sp,#0x24]
        LDR      ip,[ip,#0]
        ORR      lr,lr,ip
        LDR      ip,[sp,#0x24]
        STR      lr,[ip,#0]
        LDRB     ip,[a1,#6]
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOV      ip,#2
        STRB     ip,[v1,#0xa]
        LDRB     ip,[a1,#5]
        STRB     ip,[v1,#9]
        STR      a1,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L002604.J46.extract_east|
        LDR      ip,[a1,#0]
        CMP      ip,#0
        BEQ      |L00264c.J42.extract_east|
        MVN      ip,#0
        STR      ip,[v1,#4]
        STR      ip,[v1,#0]
        LDRB     ip,[a1,#6]
        CMP      a2,v2
        LDR      lr,[pc, #L001684-.-8]
        STRB     ip,[v1,#0xb]
        MOVEQ    ip,#2
        MOVNE    ip,#3
        STRB     ip,[v1,#0xa]
        STR      a1,[v1,#0xc]!
        LDR      ip,[lr,#0x118]
        ADD      v1,v1,#4
        ADD      ip,ip,#1
        STR      ip,[lr,#0x118]
|L00264c.J42.extract_east|
        SUB      a2,a2,#1
        CMP      a2,v6
        SUB      a3,a3,#0x41
        SUB      a1,a1,#0x200
        BGE      |L00245c.J29.extract_east|
        CMP      a4,#0
        BLT      |L0026a0.J54.extract_east|
        LDR      a1,[sp,#0]
        CMP      a1,#0
        BEQ      |L0026a0.J54.extract_east|
        LDR      a1,[sp,#0x4c]
        ADD      v5,a4,#1
        LDR      a1,[a1,#4]
        LDR      a3,[sp,#0x4c]
        ADD      a2,v3,#1
        LDR      a3,[a3,#0]
        RSB      a1,a1,v5,LSL #16
        RSB      a2,a3,a2,LSL #16
        BL       DivSF16
        MOV      v5,v5,LSL #16
        STR      a1,[sp,#0x1c]
|L0026a0.J54.extract_east|
        MVN      a3,#0
        STR      a3,[sp,#0x10]
        LDR      a3,[sp,#0x44]
        LDR      a2,[sp,#0x40]
        ADD      a1,v8,#0x41
        CMP      a3,v7
        ADD      a2,a2,#0x200
        BGT      |L0028bc.J78.extract_east|
|L0026c0.J57.extract_east|
        LDRB     a4,[a2,#6]
        LDR      ip,[sp,#0x10]
        TST      a4,#1
        BEQ      |L0026dc.J60.extract_east|
        CMP      ip,#0
        STRLT    a3,[sp,#0x10]
        B        |L0026ec.J64.extract_east|
|L0026dc.J60.extract_east|
        LDR      lr,[sp,#0x18]
        CMP      ip,lr
        MVNLE    ip,#0
        STRLE    ip,[sp,#0x10]
|L0026ec.J64.extract_east|
        AND      a4,a4,#8
        CMP      a4,#0
        LDREQ    a4,[a2,#0]
        CMPEQ    a4,#0
        BEQ      |L002860.J70.extract_east|
        LDRB     a4,[a2,#7]
        TST      a4,#4
        BEQ      |L002790.J71.extract_east|
        LDR      lr,[pc, #L0028fc-.-8]
        MOV      a4,a1,ASR #5
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,a1,#0x1f
        MOV      lr,lr,LSL ip
        STR      a1,[v1,#0]
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        ADD      a4,a1,#1
        MOV      ip,a4,ASR #5
        LDR      lr,[pc, #L0028fc-.-8]
        STR      a4,[v1,#4]
        ADD      ip,lr,ip,LSL #2
        MOV      lr,#1
        AND      a4,a4,#0x1f
        MOV      a4,lr,LSL a4
        LDR      lr,[ip,#0]
        ORR      a4,a4,lr
        STR      a4,[ip,#0]
        LDRB     a4,[a2,#6]
        LDR      ip,[pc, #L002900-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#4
        STRB     a4,[v1,#0xa]
        LDRB     a4,[a2,#4]
        STRB     a4,[v1,#9]
        STR      a2,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L002790.J71.extract_east|
        LDRB     a4,[a2,#7]
        TST      a4,#2
        BEQ      |L002820.J73.extract_east|
        ADD      ip,a1,#0x41
        MOV      a4,ip,ASR #5
        LDR      lr,[pc, #L0028fc-.-8]
        STR      ip,[v1,#0]
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,ip,#0x1f
        MOV      lr,lr,LSL ip
        LDR      ip,[a4,#0]
        ORR      ip,lr,ip
        STR      ip,[a4,#0]
        LDR      lr,[pc, #L0028fc-.-8]
        MOV      a4,a1,ASR #5
        ADD      a4,lr,a4,LSL #2
        MOV      lr,#1
        AND      ip,a1,#0x1f
        MOV      ip,lr,LSL ip
        STR      a1,[v1,#4]
        LDR      lr,[a4,#0]
        ORR      ip,ip,lr
        STR      ip,[a4,#0]
        LDRB     a4,[a2,#6]
        LDR      ip,[pc, #L002900-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#2
        STRB     a4,[v1,#0xa]
        LDRB     a4,[a2,#5]
        STRB     a4,[v1,#9]
        STR      a2,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L002820.J73.extract_east|
        LDR      a4,[a2,#0]
        CMP      a4,#0
        BEQ      |L002860.J70.extract_east|
        MVN      a4,#0
        STR      a4,[v1,#4]
        STR      a4,[v1,#0]
        LDRB     a4,[a2,#6]
        LDR      ip,[pc, #L002900-.-8]
        STRB     a4,[v1,#0xb]
        MOV      a4,#6
        STRB     a4,[v1,#0xa]
        STR      a2,[v1,#0xc]!
        LDR      a4,[ip,#0x118]
        ADD      v1,v1,#4
        ADD      a4,a4,#1
        STR      a4,[ip,#0x118]
|L002860.J70.extract_east|
        ADD      a3,a3,#1
        CMP      a3,v7
        ADD      a1,a1,#0x41
        ADD      a2,a2,#0x200
        BLE      |L0026c0.J57.extract_east|
        LDR      a3,[sp,#0x10]
        CMP      a3,#0
        BLT      |L0028bc.J78.extract_east|
        LDR      a1,[sp,#0]
        CMP      a1,#0
        BEQ      |L0028bc.J78.extract_east|
        LDR      a1,[sp,#0x4c]
        ADD      a2,v3,#1
        LDR      a1,[a1,#4]
        LDR      a3,[sp,#0x10]
        RSB      a1,a1,a3,LSL #16
        LDR      a3,[sp,#0x4c]
        LDR      a3,[a3,#0]
        RSB      a2,a3,a2,LSL #16
        BL       DivSF16
        LDR      a3,[sp,#0x10]
        STR      a1,[sp,#0x20]
        MOV      v4,a3,LSL #16
|L0028bc.J78.extract_east|
        LDR      a1,[sp,#0x20]
        STR      v6,[sp,#0x14]
        ADD      v4,v4,a1
        LDR      a1,[sp,#0x1c]
        STR      v7,[sp,#0x18]
        ADD      v5,v5,a1
        MOV      a1,#1
        STR      a1,[sp,#0]
        ADD      v3,v3,a1
        LDR      a1,[sp,#0xc]
        ADD      v8,v8,#1
        CMP      v3,a1
        BLT      |L002408.J18.extract_east|
|L0028f0.J90.extract_east|
        ADD      sp,sp,#0x50
        LDMIA    sp!,{v1-v8,pc}
L0028f8
        DCD      visobs
L0028fc
        DCD      vertsused
L002900
        DCD      |x$dataseg|

clearvertsused
        LDR      a2,[pc, #L0028fc-.-8]
        MOV      a1,#0x84
        MOV      a3,#0
|L002910.J4.clearvertsused|
        SUB      a1,a1,#1
        CMP      a1,#0
        STR      a3,[a2],#4
        BGE      |L002910.J4.clearvertsused|
        MOV      pc,lr

applyyaw
        STMDB    sp!,{v1-v4,lr}
        SUB      sp,sp,#0x24
        MOV      v3,a1
        MOV      a1,a3
        MOV      v2,a2
        MOV      v1,a3
        BL       SinF16
        MOV      v4,a1
        MOV      a1,v1
        BL       CosF16
        MOV      a2,a1
        STR      a1,[sp,#0]
        MOV      a1,#0
        STMIB    sp,{a1,v4}
        MOV      a3,#0x10000
        ADD      a4,sp,#0xc
        STMIA    a4,{a1,a3}
        RSB      a3,v4,#0
        ADD      a4,sp,#0x14
        STMIA    a4,{a1,a3}
        ADD      a3,sp,#0x1c
        STMIA    a3,{a1,a2}
        MOV      a3,sp
        MOV      a2,v3
        MOV      a1,v2
        SWI      0x50001
        ADD      sp,sp,#0x24
        LDMIA    sp!,{v1-v4,pc}

newmat
        MOV      a2,#0
        STR      a2,[a1,#4]
        MOV      a3,#0x10000
        STR      a3,[a1,#0]
        STR      a2,[a1,#8]
        ADD      a1,a1,#0xc
        STMIA    a1,{a2,a3}
        STR      a2,[a1,#8]
        STR      a2,[a1,#0xc]
        ADD      a1,a1,#0x10
        STMIA    a1,{a2,a3}
        MOV      pc,lr

translatemany
        SUB      a3,a3,#1
        CMP      a3,#0
        MOVLT    pc,lr
|L0029d0.J4.translatemany|
        LDR      ip,[a2,#0]
        LDR      a4,[a1,#0]
        SUB      a3,a3,#1
        ADD      a4,ip,a4
        STR      a4,[a2,#0]
        LDR      ip,[a2,#4]
        LDR      a4,[a1,#4]
        CMP      a3,#0
        ADD      a4,ip,a4
        STR      a4,[a2,#4]
        LDR      ip,[a2,#8]
        LDR      a4,[a1,#8]
        ADD      a4,ip,a4
        STR      a4,[a2,#8]!
        ADD      a2,a2,#4
        BGE      |L0029d0.J4.translatemany|
        MOV      pc,lr

copyverts
        ADD      a3,a3,a3,LSL #1
        SUB      a3,a3,#1
        CMP      a3,#0
        MOVLT    pc,lr
|L002a24.J4.copyverts|
        LDR      a4,[a1],#4
        SUB      a3,a3,#1
        CMP      a3,#0
        STR      a4,[a2],#4
        BGE      |L002a24.J4.copyverts|
        MOV      pc,lr

parseargs
        STMDB    sp!,{v1-v4,lr}
        SUBS     v3,a1,#1
        MOVNE    v4,#1
        LDRNE    v1,[pc, #L002900-.-8]
        ADD      v2,a2,#4
        BNE      |L002a58.J4.parseargs|
        LDMIA    sp!,{v1-v4,pc}
|L002a58.J4.parseargs|
        LDR      a2,[v2,#0]
        LDRB     a1,[a2,#0]
        CMP      a1,#0x2d
        BNE      |L002b60.J7.parseargs|
        LDRB     a1,[a2,#1]
        CMP      a1,#0x61
        BEQ      |L002b10.J22.parseargs|
        BGT      |L002ab4.J23.parseargs|
        CMP      a1,#0x53
        BEQ      |L002b2c.J19.parseargs|
        BGT      |L002aa0.J26.parseargs|
        CMP      a1,#0x41
        BEQ      |L002b10.J22.parseargs|
        CMP      a1,#0x43
        BEQ      |L002b48.J21.parseargs|
        CMP      a1,#0x4c
        BNE      |L002b58.J10.parseargs|
        B        |L002ad0.J20.parseargs|
|L002aa0.J26.parseargs|
        CMP      a1,#0x54
        BEQ      |L002b08.J18.parseargs|
        CMP      a1,#0x58
        BNE      |L002b58.J10.parseargs|
        B        |L002aec.J17.parseargs|
|L002ab4.J23.parseargs|
        CMP      a1,#0x73
        BEQ      |L002b2c.J19.parseargs|
        BGT      |L002adc.J34.parseargs|
        CMP      a1,#0x63
        BEQ      |L002b48.J21.parseargs|
        CMP      a1,#0x6c
        BNE      |L002b58.J10.parseargs|
|L002ad0.J20.parseargs|
        ADD      a1,a2,#2
        STR      a1,[v1,#0x1f4]
        B        |L002b60.J7.parseargs|
|L002adc.J34.parseargs|
        CMP      a1,#0x74
        BEQ      |L002b08.J18.parseargs|
        CMP      a1,#0x78
        BNE      |L002b58.J10.parseargs|
|L002aec.J17.parseargs|
        ADD      a1,a2,#2
        MOV      a2,#0
        MOV      a3,#0
        BL       strtol
        CMP      a1,#0
        STRGT    a1,[v1,#0x138]
        B        |L002b60.J7.parseargs|
|L002b08.J18.parseargs|
        STRB     v4,[v1,#0x170]
        B        |L002b60.J7.parseargs|
|L002b10.J22.parseargs|
        ADD      a1,a2,#2
        MOV      a2,#0
        MOV      a3,#0
        BL       strtol
        CMP      a1,#0
        STRGT    a1,[v1,#0x164]
        B        |L002b60.J7.parseargs|
|L002b2c.J19.parseargs|
        ADD      a1,a2,#2
        MOV      a2,#0
        MVN      a3,#0
        BL       strtol
        CMP      a1,#0
        STRGE    a1,[v1,#0x168]
        B        |L002b60.J7.parseargs|
|L002b48.J21.parseargs|
        STRB     v4,[v1,#0x174]
        ADD      a1,pc,#L002b70-.-8
        SWI      0x1000e
        B        |L002b60.J7.parseargs|
|L002b58.J10.parseargs|
        ADD      a1,pc,#L002ba8-.-8
        SWI      0x1000e
|L002b60.J7.parseargs|
        ADD      v2,v2,#4
        SUBS     v3,v3,#1
        BNE      |L002a58.J4.parseargs|
        LDMIA    sp!,{v1-v4,pc}
L002b70
        DCB      "You "
        DCB      "are "
        DCB      "in L"
        DCB      "AYTE"
        DCB      "ST m"
        DCB      "ode."
        DCB      "  PA"
        DCB      "USE "
        DCB      "butt"
        DCB      "on a"
        DCB      "dvan"
        DCB      "ces "
        DCB      "leve"
        DCB      "l.\n\0"
L002ba8
        DCB      "Unkn"
        DCB      "own "
        DCB      "opti"
        DCB      "on: "
        DCB      "%s\n\0"

SetRast
        STMDB    sp!,{a4,lr}
        MVN      a4,#0
        STR      a4,[sp,#0]
        LDR      a1,[a1,#0xc]
        MOV      a3,a2
        LDR      a2,[a1,#0x24]
        LDR      a1,[pc, #L002900-.-8]
        LDR      a4,[a1,#0x1c0]
        LDR      a1,[a1,#0x194]
        BL       SetVRAMPages
        LDMIA    sp!,{a4,pc}

CopyRast
        STMDB    sp!,{a4,lr}
        MVN      a4,#0
        STR      a4,[sp,#0]
        LDR      a1,[a1,#0xc]
        LDR      a3,[a1,#0x24]
        LDR      a1,[a2,#0xc]
        LDR      a2,[a1,#0x24]
        LDR      a1,[pc, #L002900-.-8]
        LDR      a4,[a1,#0x1c0]
        LDR      a1,[a1,#0x194]
        BL       CopyVRAMPages
        LDMIA    sp!,{a4,pc}

clearscreen
        STMDB    sp!,{a4-v3,lr}
        LDR      a1,[a1,#0xc]
        LDR      v1,[pc, #L002900-.-8]
        LDR      v3,[a1,#0x24]
        LDR      a1,[v1,#0x16c]
        MVN      a4,#0
        ADD      a2,a1,a1,LSL #2
        MOV      a1,#0xff
        ADD      a1,a1,#0x400
        ADD      a1,a1,a2,LSL #7
        MOV      v2,a1,LSR #11
        STR      a4,[sp,#0]
        LDR      a1,[v1,#0x194]
        LDR      a3,[v1,#0x15c]
        MOV      a4,v2
        MOV      a2,v3
        BL       SetVRAMPages
        LDR      a1,[pc, #L002c8c-.-8]
        MVN      a4,#0
        LDR      a1,[a1,#0]
        LDR      a1,[a1,#0x80]
        STR      a4,[sp,#0]
        MLA      a2,v2,a1,v3
        LDR      a1,[v1,#0x1c0]
        SUB      a4,a1,v2
        LDR      a1,[v1,#0x194]
        LDR      a3,[v1,#0x158]
        BL       SetVRAMPages
        LDMIA    sp!,{a4-v3,pc}
L002c8c
        DCD      GrafBase

installclut
|L002c90.J2.installclut|
        STMDB    sp!,{v1-v3,lr}
        LDR      v3,[pc, #L002ce8-.-8]
        MOV      v1,a1
        MOV      v2,#0x1f
|L002ca0.J4.installclut|
        LDRB     a1,[v3,v2]
        MOV      a2,v2,LSL #24
        ORR      a2,a2,a1,LSL #16
        ORR      a2,a2,a1,LSL #8
        ORR      a2,a2,a1
        LDR      a1,[v1,#0]
        BL       SetScreenColor
        SUB      v2,v2,#1
        CMP      v2,#0
        BGE      |L002ca0.J4.installclut|
        LDRB     a1,[v3,#0]
        MOV      a2,a1,LSL #16
        ORR      a2,a2,a1,LSL #8
        ORR      a1,a2,a1
        ORR      a2,a1,#0x20000000
        LDR      a1,[v1,#0]
        LDMIA    sp!,{v1-v3,lr}
        B        SetScreenColor
L002ce8
        DCD      |x$dataseg|+0x250

fadetolevel
        STMDB    sp!,{v1-v4,lr}
        LDR      v4,[pc, #L002ce8-.-8]
        MOV      v2,a1
        MOV      v1,a2
        MOV      v3,#0
|L002d00.J4.fadetolevel|
        LDRB     a1,[v4,v3]
        MOV      a2,v3,LSL #24
        MUL      a1,v1,a1
        MOV      a1,a1,ASR #16
        ORR      a2,a2,a1,LSL #16
        ORR      a2,a2,a1,LSL #8
        ORR      a2,a2,a1
        LDR      a1,[v2,#0]
        BL       SetScreenColor
        ADD      v3,v3,#1
        CMP      v3,#0x20
        BLT      |L002d00.J4.fadetolevel|
        LDRB     a1,[v4,#0]
        MUL      a2,a1,v1
        MOV      a1,a2,ASR #16
        MOV      a2,a1,LSL #16
        ORR      a2,a2,a1,LSL #8
        ORR      a1,a2,a1
        ORR      a2,a1,#0x20000000
        LDR      a1,[v2,#0]
        LDMIA    sp!,{v1-v4,lr}
        B        SetScreenColor

fadetoblank
        STMDB    sp!,{v1,lr}
        MOV      v1,a1
        BL       fadeout
        MOV      a1,v1
        MOV      a2,#0
        BL       SetRast
        MOV      a1,v1
        LDMIA    sp!,{v1,lr}
        B        installclut

fadeout
        STMDB    sp!,{v1-v4,lr}
        SUB      v2,a2,#1
        MOV      v3,v2
        MOV      v1,a1
        CMP      v2,#0
        LDMLTIA  sp!,{v1-v4,pc}
        LDR      v4,[pc, #L002900-.-8]
|L002d98.J4.fadeout|
        MOV      a2,#1
        LDR      a1,[v4,#0x190]
        BL       WaitVBL
        MOV      a2,v2,LSL #16
        MOV      a1,v3
        BL       __rt_sdiv
        MOV      a2,a1
        MOV      a1,v1
        BL       fadetolevel
        SUB      v2,v2,#1
        CMP      v2,#0
        BGE      |L002d98.J4.fadeout|
        LDMIA    sp!,{v1-v4,pc}

fadeup
        STMDB    sp!,{v1-v5,lr}
        MOV      v2,a1
        MOV      v1,a2
        CMP      a2,#0
        MOV      v3,#0
        LDMLEIA  sp!,{v1-v5,pc}
        SUB      v4,v1,#1
        LDR      v5,[pc, #L002900-.-8]
|L002dec.J4.fadeup|
        MOV      a2,#1
        LDR      a1,[v5,#0x190]
        BL       WaitVBL
        MOV      a2,v3,LSL #16
        MOV      a1,v4
        BL       __rt_sdiv
        MOV      a2,a1
        MOV      a1,v2
        BL       fadetolevel
        ADD      v3,v3,#1
        CMP      v3,v1
        BLT      |L002dec.J4.fadeup|
        LDMIA    sp!,{v1-v5,pc}

malloctype
        STMDB    sp!,{v1,lr}
        ADD      v1,a1,#4
        LDR      a1,[pc, #L002e50-.-8]
        MOV      a3,a2
        LDR      a1,[a1,#0]
        MOV      a2,v1
        LDR      a1,[a1,#0x98]
        LDR      a1,[a1,#0xa8]
        BL       AllocMemFromMemLists
        CMP      a1,#0
        STRNE    v1,[a1],#4
        LDMIA    sp!,{v1,pc}
L002e50
        DCD      KernelBase

freetype
        CMP      a1,#0
        MOVEQ    pc,lr
        SUB      a2,a1,#4
        LDR      a1,[pc, #L002e50-.-8]
        LDR      a1,[a1,#0]
        LDR      a1,[a1,#0x98]
        LDR      a1,[a1,#0xa8]
        LDR      a3,[a2,#0]
        B        FreeMemToMemLists

loadlevelsequence
        STMDB    sp!,{a4-v3,lr}
        LDR      v1,[pc, #L002900-.-8]
        MOV      a3,sp
        MOV      a2,#0
        LDR      a1,[v1,#0x1f4]
        BL       allocloadfile
        STR      a1,[v1,#0x198]
        CMP      a1,#0
        ADDEQ    a1,pc,#L002f6c-.-8
        BLEQ     die
        LDR      a1,[v1,#0x198]
        MOV      v2,v1
        MOV      v1,#0
        STR      v1,[v2,#0x1a0]
        LDR      a4,[sp,#0]
        MOV      a3,a1
        B        |L002ed4.J7.loadlevelsequence|
|L002ebc.J6.loadlevelsequence|
        CMP      a2,#0xa
        CMPNE    a2,#0xd
        BNE      |L002ed4.J7.loadlevelsequence|
        LDR      a2,[v2,#0x1a0]
        ADD      a2,a2,#1
        STR      a2,[v2,#0x1a0]
|L002ed4.J7.loadlevelsequence|
        LDRB     a2,[a1],#1
        SUB      ip,a1,a3
        CMP      ip,a4
        BLE      |L002ebc.J6.loadlevelsequence|
        LDR      a1,[v2,#0x1a0]
        MOV      a3,#0
        MOV      a2,a1,LSL #2
        LDR      a1,[pc, #L002e50-.-8]
        LDR      a1,[a1,#0]
        LDR      a1,[a1,#0x98]
        LDR      a1,[a1,#0xa8]
        BL       AllocMemFromMemLists
        STR      a1,[v2,#0x19c]
        CMP      a1,#0
        ADDEQ    a1,pc,#L002f88-.-8
        BLEQ     die
        LDR      a1,[v2,#0x198]
        MOV      ip,v2
        MOV      a3,#0
        MOV      a2,a1
|L002f24.J26.loadlevelsequence|
        LDR      lr,[sp,#0]
        LDR      v2,[ip,#0x198]
        B        |L002f58.J16.loadlevelsequence|
|L002f30.J15.loadlevelsequence|
        CMP      a4,#0xa
        CMPNE    a4,#0xd
        BNE      |L002f58.J16.loadlevelsequence|
        STRB     v1,[a1,#-1]
        LDR      lr,[ip,#0x19c]
        MOV      a4,a3
        STR      a2,[lr,a4,LSL #2]
        MOV      a2,a1
        ADD      a3,a3,#1
        B        |L002f24.J26.loadlevelsequence|
|L002f58.J16.loadlevelsequence|
        LDRB     a4,[a1],#1
        SUB      v3,a1,v2
        CMP      v3,lr
        BLE      |L002f30.J15.loadlevelsequence|
        LDMIA    sp!,{a4-v3,pc}
L002f6c
        DCB      "Can\'"
        DCB      "t lo"
        DCB      "ad l"
        DCB      "evel"
        DCB      " seq"
        DCB      "uenc"
        DCB      "e.\n\0"
L002f88
        DCB      "Can\'"
        DCB      "t al"
        DCB      "loca"
        DCB      "te s"
        DCB      "eque"
        DCB      "nce "
        DCB      "tabl"
        DCB      "e.\n\0"

loadwalls
        STMDB    sp!,{v1,lr}
        LDR      a1,[pc, #L002fdc-.-8]
        BL       loadloaf
        LDR      v1,[pc, #L002900-.-8]
        CMP      a1,#0
        STR      a1,[v1,#0x13c]
        ADDEQ    a1,pc,#L002fe0-.-8
        BLEQ     die
        LDR      a1,[v1,#0x13c]
        LDR      a2,[a1,#0]
        STR      a2,[v1,#0x140]
        LDMIA    sp!,{v1,lr}
        B        initwallanim
L002fdc
        DCD      wallimagefile
L002fe0
        DCB      "Can\'"
        DCB      "t lo"
        DCB      "ad w"
        DCB      "all "
        DCB      "imag"
        DCB      "es.\n"
        DCB      "\0\0\0\0"

unloadwalls
        STMDB    sp!,{v1,lr}
        BL       closewallanim
        LDR      v1,[pc, #L002900-.-8]
        LDR      a1,[v1,#0x13c]
        BL       freeloaf
        MOV      a1,#0
        STR      a1,[v1,#0x13c]
        LDMIA    sp!,{v1,pc}

openlevelstuff
        STMDB    sp!,{v1,lr}
        LDR      v1,[pc, #L002900-.-8]
        MOV      a1,#0x78
        STR      a1,[v1,#0x16c]
        LDR      a1,[pc, #L003068-.-8]
        BL       loadlevelmap
        BL       loadwalls
        BL       initrend
        MOV      a2,#0
        LDR      a1,[v1,#0x1ac]
        BL       SetRast
        MOV      a2,#0
        LDR      a1,[v1,#0x1b0]
        BL       SetRast
        LDR      a1,[pc, #L00306c-.-8]
        MOV      a2,#0xf
        ADD      a2,a2,#0x2700
        LDMIA    sp!,{v1,lr}
        B        spoolsound
L003068
        DCD      levelname
L00306c
        DCD      spoolmusicfile

closelevelstuff
        STR      lr,[sp,#-4]!
        MOV      a1,#1
        BL       stopspoolsound
        LDR      a1,[pc, #L002900-.-8]
        MOV      a2,#0x20
        LDR      a1,[a1,#0x1ac]
        BL       fadetoblank
        BL       closerend
        BL       unloadwalls
        LDR      lr,[sp],#4
        B        freelevelmap

opengamestuff
        STR      lr,[sp,#-4]!
        BL       loadsfx
        BL       initclip
        BL       initmessages
        BL       loadstatscreen
        BL       loadgun
        BL       loadskull
        LDR      lr,[sp],#4
        B        loadmap

closegamestuff
        STMDB    sp!,{v1,v2,lr}
        BL       freemap
        BL       freeskull
        LDR      v1,[pc, #L002900-.-8]
        LDR      a1,[v1,#0x14c]
        BL       freecelarray
        MOV      v2,#0
        STR      v2,[v1,#0x14c]
        LDR      a1,[v1,#0x148]
        BL       freecelarray
        STR      v2,[v1,#0x148]
        BL       closestatscreen
        BL       closemessages
        LDMIA    sp!,{v1,v2,lr}
        B        freesfx

openstuff
        STMDB    sp!,{v1-v4,lr}
        SUB      sp,sp,#8
        BL       InitFileFolioGlue
        BL       OpenGraphicsFolio
        CMP      a1,#0
        ADDLT    a1,pc,#L0032c0-.-8
        BLLT     die
        BL       OpenMathFolio
        CMP      a1,#0
        ADDLT    a1,pc,#L0032dc-.-8
        BLLT     die
        LDR      a1,[pc, #L002e50-.-8]
        LDR      v3,[pc, #L002900-.-8]
        LDR      a1,[a1,#0]
        LDR      a1,[a1,#0xb4]
        TST      a1,#0xe0
        LDRNE    a1,[v3,#0x154]
        ORRNE    a1,a1,#0x4000
        STRNE    a1,[v3,#0x154]
        BL       GetVBLIOReq
        STR      a1,[v3,#0x190]
        BL       GetVRAMIOReq
        LDR      v4,[pc, #L002c8c-.-8]
        STR      a1,[v3,#0x194]
        LDR      a1,[v4,#0]
        LDR      a1,[a1,#0x78]
        BL       GetMemType
        LDR      a2,[pc, #L00330c-.-8]
        AND      a1,a1,#0x70000000
        STR      a1,[a2,#4]
        MOV      a1,sp
        BL       CreateScreenGroup
        STR      a1,[v3,#0x1a8]
        CMP      a1,#0
        ADDLT    a1,pc,#L003310-.-8
        BLLT     die
        LDR      v1,[pc, #L00332c-.-8]
        MOV      v2,#1
|L003194.J12.openstuff|
        LDR      a1,[sp,v2,LSL #2]
        STR      a1,[v1,#0]
        BL       LookupItem
        STR      a1,[v1,#8]
        CMP      a1,#0
        ADDEQ    a1,pc,#L003330-.-8
        BLEQ     die
        LDR      a1,[v1,#8]
        LDR      a1,[a1,#0x78]
        STR      a1,[v1,#0xc]
        LDR      a1,[a1,#0x18]
        STR      a1,[v1,#4]
        LDR      a1,[v1,#0]
        BL       EnableHAVG
        LDR      a1,[v1,#0]
        BL       EnableVAVG
        ADD      v1,v1,#0x10
        SUBS     v2,v2,#1
        BCS      |L003194.J12.openstuff|
        LDR      v1,[v3,#0x1ac]
        LDR      a1,[v1,#0xc]
        LDR      a1,[a1,#0x38]
        STR      a1,[v3,#0x1b4]
        LDR      a1,[v1,#0xc]
        LDR      a1,[a1,#0x3c]
        STR      a1,[v3,#0x1b8]
        LDR      a2,[v1,#0xc]
        LDR      v2,[v4,#0]
        ADD      a2,a2,#0x28
        LDMIA    a2,{a1,a2}
        LDR      a3,[v2,#0x80]
        MUL      a1,a2,a1
        ADD      a1,a3,a1,LSL #1
        SUB      a2,a1,#1
        MOV      a1,a3
        BL       __rt_udiv
        STR      a1,[v3,#0x1c0]
        LDR      a2,[v2,#0x80]
        MUL      a2,a1,a2
        STR      a2,[v3,#0x1bc]
        MOV      a1,v1
        BL       installclut
        LDR      a1,[v3,#0x1b0]
        BL       installclut
        MOV      a2,#0
        LDR      a1,[v3,#0x1ac]
        BL       SetRast
        MOV      a2,#0
        LDR      a1,[v3,#0x1b0]
        BL       SetRast
        LDR      a3,[pc, #L00334c-.-8]
        ADD      a1,pc,#L003350-.-8
        MOV      a4,#0x800
        MOV      a2,#0xb4
        BL       CreateThread
        STR      a1,[v3,#0x18c]
        CMP      a1,#0
        ADDLT    a1,pc,#L003360-.-8
        BLLT     die
        BL       OpenAudioFolio
        CMP      a1,#0
        ADDLT    a1,pc,#L003384-.-8
        BLLT     die
        ADD      a1,pc,#L0033b0-.-8
        BL       initElKabong
        CMP      a1,#0
        ADDNE    a1,pc,#L0033bc-.-8
        BLNE     die
        BL       opentimer
        BL       initsound
        BL       initstreaming
        BL       openmmfont
        BL       loadlevelsequence
        ADD      sp,sp,#8
        LDMIA    sp!,{v1-v4,pc}
L0032c0
        DCB      "Can\'"
        DCB      "t op"
        DCB      "en g"
        DCB      "raph"
        DCB      "ics "
        DCB      "foli"
        DCB      "o.\n\0"
L0032dc
        DCB      "Can\'"
        DCB      "t op"
        DCB      "en m"
        DCB      "ath "
        DCB      "foli"
        DCB      "o; d"
        DCB      "id y"
        DCB      "ou r"
        DCB      "un o"
        DCB      "pera"
        DCB      "math"
        DCB      "?\n\0\0"
L00330c
        DCD      scrtags
L003310
        DCB      "Can\'"
        DCB      "t cr"
        DCB      "eate"
        DCB      " scr"
        DCB      "eeng"
        DCB      "roup"
        DCB      ".\n\0\0"
L00332c
        DCD      rports
L003330
        DCB      "Woah"
        DCB      "!  W"
        DCB      "here"
        DCB      "\'s t"
        DCB      "he s"
        DCB      "cree"
        DCB      "n?\n\0"
L00334c
        DCD      joythreadfunc
L003350
        DCB      "Joyp"
        DCB      "ad R"
        DCB      "eade"
        DCB      "r\0\0\0"
L003360
        DCB      "Can\'"
        DCB      "t op"
        DCB      "en j"
        DCB      "oypa"
        DCB      "d re"
        DCB      "adin"
        DCB      "g th"
        DCB      "read"
        DCB      ".\n\0\0"
L003384
        DCB      "Can\'"
        DCB      "t op"
        DCB      "en a"
        DCB      "udio"
        DCB      " fol"
        DCB      "io; "
        DCB      "did "
        DCB      "you "
        DCB      "run "
        DCB      "it?\n"
        DCB      "\0\0\0\0"
L0033b0
        DCB      "$pro"
        DCB      "gdir"
        DCB      "\0\0\0\0"
L0033bc
        DCB      "Can\'"
        DCB      "t pr"
        DCB      "epar"
        DCB      "e fo"
        DCB      "r El"
        DCB      " Kab"
        DCB      "ong."
        DCB      "\n\0\0\0"

closestuff
        STMDB    sp!,{v1,lr}
        BL       closelevelstuff
        BL       closegamestuff
        BL       closeElKabong
        BL       shutdownstreaming
        BL       CloseAudioFolio
        LDR      v1,[pc, #L002900-.-8]
        LDR      a1,[v1,#0x18c]
        CMP      a1,#0
        BEQ      |L003410.J4.closestuff|
        BL       DeleteThread
        MOV      a1,#0
        STR      a1,[v1,#0x18c]
|L003410.J4.closestuff|
        LDMIA    sp!,{v1,lr}
        B        closemmfont

die
        STR      lr,[sp,#-4]!
        SWI      0x1000e
        BL       closestuff
        MOV      a1,#0x14
        LDR      lr,[sp],#4
        B        exit

        AREA |C$$data|, DATA

|x$dataseg|
unitsquare
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00008000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00010000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00008000
        DCD      0x00008000
        DCD      0x00000000
        DCD      0x00008000
        DCD      0x00010000
        DCD      0x00000000
        DCD      0x00008000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00010000
        DCD      0x00008000
        DCD      0x00000000
        DCD      0x00010000
        DCD      0x00010000
        DCD      0x00000000
        DCD      0x00010000
        DCD      0x00000000
        DCD      0xffff0000
        DCD      0x00000000
        DCD      0x00008000
        DCD      0xffff0000
        DCD      0x00000000
        DCD      0x00010000
        DCD      0xffff0000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0xffff0000
        DCD      0x00008000
        DCD      0x00008000
        DCD      0xffff0000
        DCD      0x00008000
        DCD      0x00010000
        DCD      0xffff0000
        DCD      0x00008000
        DCD      0x00000000
        DCD      0xffff0000
        DCD      0x00010000
        DCD      0x00008000
        DCD      0xffff0000
        DCD      0x00010000
        DCD      0x00010000
        DCD      0xffff0000
        DCD      0x00010000
unitvects
        DCD      0x00010000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00010000
        DCD      0xffff0000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0x00000000
        DCD      0xffff0000
curviso
        DCD      0x00000000
curobv
        DCD      0x00000000
nobverts
        DCD      0x00000000
nvisv
        DCD      0x00000000
nviso
        DCD      0x00000000
playerdir
        DCD      0x00000000
playerhealth
        DCD      0x00000000
playerlives
        DCD      0x00000000
gunpower
        DCD      0x00000000
nkeys
        DCD      0x00000000
score
        DCD      0x00000000
xlifethresh
        DCD      0x00000000
xlifeincr
        DCD      0x0007a120
walliev
        DCD      0x00000000
wallimgs
        DCD      0x00000000
ca_zombie
        DCD      0x00000000
ca_gun
        DCD      0x00000000
ca_ray
        DCD      0x00000000
guncel
        DCD      0x00000000
ccbextra
        DCD      0x00000000
floorcolor
        DCD      0x00000000
ceilingcolor
        DCD      0x00000000
damagefade
        DCD      0x00000000
scale
        DCD      0x00024000
throttleshift
        DCD      0x00000004
cy
        DCD      0x00000078
skiptitle
        DCB      0x00,0x00,0x00,0x00
laytest
        DCB      0x00,0x00,0x00,0x00
practice
        DCB      0x00,0x00,0x00,0x00
domusic
        DCB      0x01,0x00,0x00,0x00
dosfx
        DCB      0x01,0x00,0x00,0x00
exitedlevel
        DCB      0x00,0x00,0x00,0x00
gottalisman
        DCB      0x00,0x00,0x00,0x00
joythread
        DCD      0x00000000
vblIO
        DCD      0x00000000
sportIO
        DCD      0x00000000
levelseqbuf
        DCD      0x00000000
seqnames
        DCD      0x00000000
nseq
        DCD      0x00000000
level
        DCD      0x00000000
sgrpitem
        DCD      0x00000000
rpvis
        DCD      rports
rprend
        DCD      rports+0x10
wide
        DCD      0x00000000
high
        DCD      0x00000000
screensize
        DCD      0x00000000
screenpages
        DCD      0x00000000
scrtags
        DCD      0x0000000b
        DCD      0x00000000
        DCD      0x00000002
        DCD      0x00000002
        DCD      0x00000000
        DCD      0x00000000
defaultseq
        DCB      0x24,0x70,0x72,0x6f
        DCB      0x67,0x64,0x69,0x72
        DCB      0x2f,0x4c,0x65,0x76
        DCB      0x65,0x6c,0x53,0x65
        DCB      0x71,0x75,0x65,0x6e
        DCB      0x63,0x65,0x00,0x00
sequencefile
        DCD      defaultseq
levelname
        DCB      0x46,0x6c,0x6f,0x6f
        DCB      0x72,0x50,0x6c,0x61
        DCB      0x6e,0x00,0x00,0x00
zthrottle
        DCD      0x00000000
xthrottle
        DCD      0x00000000
athrottle
        DCD      0x00000000
        DCD      0x00000001
        DCD      0xffffffff
        DCD      0x00000001
        DCD      0xffffffff
        DCD      0x00000000
        DCD      0x00000001
        DCD      0xffffffff
        DCD      0x00000000
        DCD      0x00000001
        DCD      0x00000001
        DCD      0xffffffff
        DCD      0xffffffff
        DCD      0x00000001
        DCD      0x00000000
        DCD      0x00000000
        DCD      0xffffffff
clutmap
        DCB      0x1a,0x20,0x26,0x2c
        DCB      0x32,0x38,0x3d,0x43
        DCB      0x49,0x4e,0x53,0x5a
        DCB      0x63,0x6b,0x73,0x7b
        DCB      0x84,0x8c,0x94,0x9c
        DCB      0xa5,0xad,0xb5,0xbd
        DCB      0xc6,0xce,0xd6,0xde
        DCB      0xe7,0xef,0xf7,0xff

        AREA |C$$zidata|, NOINIT

plusx
        % 12
plusz
        % 12
minusx
        % 12
minusz
        % 12
xformsquare
        % 216
xformvects
        % 48
camera
        % 36
xfverts
        % 15000
projverts
        % 15000
grididxs
        % 8452
visobs
        % 14400
vertsused
        % 532
obverts
        % 3072
xfobverts
        % 3072
playerpos
        % 12
campos
        % 12
rports
        % 32
wallimagefile
        % 80
spoolmusicfile
        % 80

        EXPORT xfobverts
        EXPORT grididxs
        EXPORT projverts
        EXPORT xfverts
        EXPORT unloadwalls
        EXPORT loadwalls
        EXPORT die
        EXPORT loadlevelsequence
        EXPORT freetype
        EXPORT malloctype
        EXPORT fadeup
        EXPORT fadeout
        EXPORT fadetoblank
        EXPORT CopyRast
        EXPORT SetRast
        EXPORT vertsused
        EXPORT clearscreen
        EXPORT obverts
        EXPORT visobs
        EXPORT clearvertsused
        EXPORT regenpath
        EXPORT blockpath
        EXPORT checkcontact
        EXPORT genpathbox
        EXPORT recoil
        EXPORT moveposition
        EXPORT closelevelstuff
        EXPORT extractcels
        EXPORT minusz
        EXPORT plusz
        EXPORT minusx
        EXPORT plusx
        EXPORT translatemany
        EXPORT copyverts
        EXPORT xformsquare
        EXPORT campos
        EXPORT xformvects
        EXPORT applyyaw
        EXPORT camera
        EXPORT newmat
        EXPORT fadetolevel
        EXPORT spoolmusicfile
        EXPORT moveplayer
        EXPORT installclut
        EXPORT fullstop
        EXPORT openlevelstuff
        EXPORT playerpos
        EXPORT closegamestuff
        EXPORT levelmain
        EXPORT opengamestuff
        EXPORT closestuff
        EXPORT gamemain
        EXPORT openstuff
        EXPORT parseargs
        EXPORT wallimagefile
        EXPORT main
        EXPORT levelname
        EXPORT sequencefile
        EXPORT defaultseq
        EXPORT scrtags
        EXPORT screenpages
        EXPORT screensize
        EXPORT high
        EXPORT wide
        EXPORT rprend
        EXPORT rports
        EXPORT rpvis
        EXPORT sgrpitem
        EXPORT level
        EXPORT nseq
        EXPORT seqnames
        EXPORT levelseqbuf
        EXPORT sportIO
        EXPORT vblIO
        EXPORT joythread
        EXPORT gottalisman
        EXPORT exitedlevel
        EXPORT dosfx
        EXPORT domusic
        EXPORT practice
        EXPORT laytest
        EXPORT skiptitle
        EXPORT cy
        EXPORT throttleshift
        EXPORT scale
        EXPORT damagefade
        EXPORT ceilingcolor
        EXPORT floorcolor
        EXPORT ccbextra
        EXPORT guncel
        EXPORT ca_ray
        EXPORT ca_gun
        EXPORT ca_zombie
        EXPORT wallimgs
        EXPORT walliev
        EXPORT xlifeincr
        EXPORT xlifethresh
        EXPORT score
        EXPORT nkeys
        EXPORT gunpower
        EXPORT playerlives
        EXPORT playerhealth
        EXPORT playerdir
        EXPORT nviso
        EXPORT nvisv
        EXPORT nobverts
        EXPORT curobv
        EXPORT curviso
        EXPORT unitvects
        EXPORT unitsquare

        IMPORT _main_arg
        IMPORT __main
        IMPORT closemmfont
        IMPORT DeleteThread
        IMPORT CloseAudioFolio
        IMPORT shutdownstreaming
        IMPORT closeElKabong
        IMPORT openmmfont
        IMPORT initstreaming
        IMPORT initsound
        IMPORT opentimer
        IMPORT initElKabong
        IMPORT OpenAudioFolio
        IMPORT CreateThread
        IMPORT joythreadfunc
        IMPORT __rt_udiv
        IMPORT EnableVAVG
        IMPORT EnableHAVG
        IMPORT LookupItem
        IMPORT CreateScreenGroup
        IMPORT GetMemType
        IMPORT GetVRAMIOReq
        IMPORT GetVBLIOReq
        IMPORT OpenMathFolio
        IMPORT OpenGraphicsFolio
        IMPORT InitFileFolioGlue
        IMPORT freesfx
        IMPORT closemessages
        IMPORT closestatscreen
        IMPORT freecelarray
        IMPORT freeskull
        IMPORT freemap
        IMPORT loadmap
        IMPORT loadskull
        IMPORT loadgun
        IMPORT loadstatscreen
        IMPORT initmessages
        IMPORT initclip
        IMPORT loadsfx
        IMPORT freelevelmap
        IMPORT closerend
        IMPORT initrend
        IMPORT loadlevelmap
        IMPORT freeloaf
        IMPORT closewallanim
        IMPORT initwallanim
        IMPORT loadloaf
        IMPORT allocloadfile
        IMPORT FreeMemToMemLists
        IMPORT AllocMemFromMemLists
        IMPORT KernelBase
        IMPORT __rt_sdiv
        IMPORT SetScreenColor
        IMPORT GrafBase
        IMPORT CopyVRAMPages
        IMPORT SetVRAMPages
        IMPORT strtol
        IMPORT rendercels
        IMPORT WaitVBL
        IMPORT processvisobs
        IMPORT processgrid
        IMPORT subtime
        IMPORT gettime
        IMPORT CosF16
        IMPORT SinF16
        IMPORT DivSF16
        IMPORT MulSF16
        IMPORT levelmap
        IMPORT DisplayScreen
        IMPORT playsound
        IMPORT cyclewalls
        IMPORT moveobjects
        IMPORT dostatmap
        IMPORT probe
        IMPORT shoot
        IMPORT attemptoptions
        IMPORT spoolsound
        IMPORT rendermessage
        IMPORT stopspoolsound
        IMPORT jd
        IMPORT simpledeath
        IMPORT dointerlev
        IMPORT loadshard
        IMPORT showcredits
        IMPORT DoHighScoreScr
        IMPORT playcpak
        IMPORT exit
        IMPORT resetjoydata
        IMPORT dispoptionscreen
        IMPORT dotitle
        IMPORT |Lib$$Request$$armlib$$_cn.32b|, WEAK

        END
